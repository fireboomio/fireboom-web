import { type DMMF } from '@/interfaces/dbml';
import { generateTables } from './table';
import { generateEnums } from './enums';
import { generateRelations } from './relations';
import { generateManyToManyTables } from './many-to-many-tables';

export const autoGeneratedComment = `//// ------------------------------------------------------
//// THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
//// ------------------------------------------------------`;

export function generateDBMLSchema(
  dmmf: DMMF.Document,
  allowManyToMany: boolean = true,
  mapToDbSchema: boolean = false,
  includeRelationFields: boolean = true
): string {
  const tables = generateTables(
    dmmf.datamodel.models,
    mapToDbSchema,
    includeRelationFields
  );
  const manyToManyTables = allowManyToMany
    ? generateManyToManyTables(dmmf.datamodel.models, mapToDbSchema)
    : [];
  const enums = generateEnums(dmmf.datamodel.enums);
  const refs = generateRelations(dmmf.datamodel.models, mapToDbSchema);

  return [
    autoGeneratedComment,
    ...tables,
    ...manyToManyTables,
    ...enums,
    ...refs,
  ].join('\n\n');
}