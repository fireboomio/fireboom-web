import{l as w,V as b,K as B,r as h}from"./index-878ae04f.js";import{b as R}from"./PrismaSchemaActions-5cb76651.js";import{m as S}from"./fireBoomAPIOperator-5d8efb96.js";import{P as v}from"./PrismaSchemaContext-379ae6d3.js";import{r as k,a as D,b as P}from"./ModelingHelpers-2490cdf3.js";import{D as y}from"./datasource-c03a16f6.js";const p={extractDefaultAttrArgs:t=>{const{value:r}=t[0]??{value:void 0};return typeof r=="object"&&r.name||r},extractNormalAttrArgs:t=>{const{value:r}=t[0]??{value:void 0};return r},extractIndexAttributeArgs:t=>{const r=(t==null?void 0:t.map(e=>e.value))??[],s=r.filter(e=>e.key==="fields").map(e=>e.value).flatMap(e=>e.args),m=r.length>=1?r[0].args:[],a=t==null?void 0:t.map(e=>e.value).filter(e=>e.key==="name").map(e=>e.value)[0],i=t==null?void 0:t.map(e=>e.value).filter(e=>e.key==="map").map(e=>e.value)[0];return{fields:s.length>0?s:m,name:a,map:i}},extractRelationAttributeArgs:t=>{var i,e,n;const r=t.map(o=>o.value).filter(o=>o.key==="name").map(o=>o.value)[0],s=(e=(i=t[0])==null?void 0:i.value)!=null&&e.key||(n=t[0])==null?void 0:n.value,m=t.map(o=>o.value).filter(o=>o.key==="fields").map(o=>o.value).flatMap(o=>o.args),a=t.map(o=>o.value).filter(o=>o.key==="references").map(o=>o.value).flatMap(o=>o.args);return{name:r||s,fields:m,references:a}},buildNewRelationArgs:(t,r,s)=>{const m=[];return t&&m.push({type:"attributeArgument",value:{type:"keyValue",key:"name",value:t}}),r&&r.length>0&&m.push({type:"attributeArgument",value:{type:"keyValue",key:"fields",value:{type:"array",args:r}}}),s&&s.length>0&&m.push({type:"attributeArgument",value:{type:"keyValue",key:"references",value:{type:"array",args:s}}}),m}},L=(t,r)=>{var i,e;const s=(i=t.attributes)==null?void 0:i.find(n=>n.name==="relation"),m=((e=s==null?void 0:s.args)==null?void 0:e.map(n=>n.value).filter(n=>n.key==="fields").map(n=>n.value).flatMap(n=>n.args))??[];return!!r.properties.filter(n=>n.type==="field").map(n=>n).filter(n=>m.includes(n.name)).find(n=>{var o;return(o=n.attributes)==null?void 0:o.find(c=>c.name==="unique")})},x=(t,r)=>{const s=[...r];if(t.comment){const a=r.findIndex(e=>e.id===t.id);let i;for(let e=a-1;e>=0;e--){switch(r[e].type){case"datasource":case"enum":case"model":case"generator":i=-1;break;case"comment":i=e;break}if(i){if(i==-1)s.splice(a-1,0,{id:-1,type:"break"},{id:-1,type:"comment",text:t.comment});else{const o=s[i];o.text=t.comment}break}}}return t.properties=t.properties??[],t.properties.filter(a=>a.type==="field").map(a=>a).filter(a=>{var i;return(i=a.attributes)==null?void 0:i.find(e=>e.name==="relation")}).forEach(a=>{var o,c;const i=a.fieldType,{name:e}=p.extractRelationAttributeArgs(((c=(o=a.attributes)==null?void 0:o.find(l=>l.name==="relation"))==null?void 0:c.args)??[]),n=s.filter(l=>l.type==="model").map(l=>l).find(l=>l.name===i);if(n){const l=L(a,t);let f=!1;const g=n.properties.map(u=>{var d,A;if(u.type==="field"&&u.fieldType===t.name){if(e){const{name:E}=p.extractRelationAttributeArgs(((A=(d=u.attributes)==null?void 0:d.find(N=>N.name==="relation"))==null?void 0:A.args)??[]);if(E!==e)return u}return f=!0,{...u,array:!l,optional:l}}return u});if(!f){const u={type:"attribute",kind:"field",name:"relation",args:p.buildNewRelationArgs(e,[],[])};g.push({type:"field",name:e?e.replaceAll('"',"").toLowerCase():`${t.name.toLowerCase()}${l?"":"s"}`,fieldType:t.name,array:!l,optional:l,attributes:e?[u]:[]})}s.forEach((u,d)=>{u.id===n.id&&(s[d]={...n,properties:g})})}}),s},C=(t,r,s)=>{const m=t.map(i=>i.fieldType),a=t.map(i=>{var e,n;return p.extractRelationAttributeArgs(((n=(e=i.attributes)==null?void 0:e.find(o=>o.name==="relation"))==null?void 0:n.args)??[])}).map(i=>i.name);return s.map(i=>{if(i.type==="model"&&m.includes(i.name)){const e={...i};return{...e,properties:e.properties.filter(n=>{var o,c;if(n.type==="field"&&n.fieldType===r){const{name:l}=p.extractRelationAttributeArgs(((c=(o=n.attributes)==null?void 0:o.find(f=>f.name==="relation"))==null?void 0:c.args)??[]);return!a.includes(l)}return!0})}}return i})},F=t=>({addModel:r=>{const s=[...t,r];return x(r,s)},updateModel:r=>{const s=t.find(e=>e.id===r.id);if(!s)return t;const m=s==null?void 0:s.properties.filter(e=>{var n;return e.type==="field"&&((n=e.attributes)==null?void 0:n.find(o=>o.name==="relation"))}).map(e=>e),a=r.properties.filter(e=>{var n;return e.type==="field"&&((n=e.attributes)==null?void 0:n.find(o=>o.name==="relation"))}).map(e=>e),i=m.filter(e=>!a.find(n=>{var o,c;return JSON.stringify((o=n.attributes)==null?void 0:o.find(l=>l.name==="relation"))===JSON.stringify((c=e.attributes)==null?void 0:c.find(l=>l.name==="relation"))}));return x(r,C(i,r.name,t).map(e=>e.id===r.id?r:e))},addEnum:r=>[...t,r],addEnums:r=>[...t,...r],updateEnum:r=>t.map(s=>s.id===r.id?r:s),deleteEntity:r=>{const s=t.find(a=>a.id===r);if(!s)return t;const m=s.name;return t.filter(a=>a.id!==r).map(a=>a.type==="model"?{...a,properties:a.properties.filter(i=>!(i.type==="field"&&i.fieldType===m))}:a)},cleanEmptyNameEntity:()=>t.filter(r=>!(["enum","model"].includes(r.type)&&!r.name)),updateEntityName:(r,s)=>{const m=t.find(a=>a.id===r).name;return t.map(a=>{if(a.id!==r&&a.type==="model"){const i={...a},e=[...i.properties];return{...i,properties:e.map(n=>n.type==="field"&&n.fieldType===m?{...n,fieldType:s}:n)}}return a.id===r&&["enum","model"].includes(a.type)?{...a,name:s}:a})}});w.throttle(()=>{b.error("当前schema不合法",3)},3e3);const U=()=>{const t=B(),{state:{blocks:r,currentDBSource:s,originBlocks:m},dispatch:a}=h.useContext(v);return{blocks:r,originBlocks:m,updateAndSaveBlock:c=>(c.forEach(l=>{l.type==="model"&&!l.properties&&(l.properties=[])}),S(c,s.name).then(()=>k(s.name)).catch(l=>{throw a(R(F(r).cleanEmptyNameEntity())),b.error(t.formatMessage({id:"waeVf8",defaultMessage:[{type:0,value:"数据迁移失败！error: "},{type:1,value:"error"}]},{error:l.message})),l})),applyLocalSchema:c=>{try{D(c,a)}catch{}},applyLocalBlocks:c=>{P(c,a)},refreshBlocks:()=>k(s.name)}},W=()=>{const{state:{blocks:t,currentDBSource:r}}=h.useContext(v);let s=r.kind;if(s==y.Prisma){const m=t.filter(a=>a.type==="datasource").map(a=>a).flatMap(a=>a.assignments.filter(i=>i.type==="assignment"&&i.key==="provider").map(i=>i).map(i=>i.value).map(i=>i.toLowerCase().replace(/^"|"$/g,""))).pop();if(m)for(const a in y)a.toLowerCase()===m&&(s=y[a])}return{...r,realKind:s}},O=()=>{const{state:{blocks:t,delMap:r,editMap:s,newMap:m}}=h.useContext(v),a=()=>Math.max(...t.map(o=>o.id))+1;let i=[],e,n;for(let o=0;o<t.length;o++){const c=t[o];switch(c.type){case"enum":case"model":e=c,o===t.length-1&&i.push({...e,comment:n});break;case"comment":n=c.text.replace(/^\/{3}\s*/,"");break;case"break":e&&(i.push({...e,comment:n}),e=void 0,n=void 0);break}}return{entities:i,delMap:r,editMap:s,newMap:m,getNextId:a,getFirstEntity:()=>t.find(o=>["enum","model"].includes(o.type))}};export{p as A,F as P,W as a,U as b,O as u};
