import{r as X,W as wt,c as A,m as Se,X as Fe,k as Et,Y as It,d as St,Z as I,j as u,f as L,F as k,g as R,B as Oe}from"./index.e5e6c754.js";import{C as _t}from"./index.3e81d184.js";import{p as P,I as Ne}from"./printer.b0e2956d.js";import{S as ne}from"./index.6926b693.js";import{i as Be}from"./index.esm.0df65c6e.js";import{W as At}from"./workbenchContext.a6b76e3b.js";import{k as Lt}from"./keyBy.400ebaf7.js";import{K as f,d as b,G as g,i as Dt,a as Mt,b as G,c as l,e as J,D as v,f as Le,O as V,p as Rt,g as Ft}from"./index.b6cece06.js";const xe=e=>{let t;const n=new Set,s=(p,_)=>{const m=typeof p=="function"?p(t):p;if(!Object.is(m,t)){const S=t;t=(_!=null?_:typeof m!="object")?m:Object.assign({},t,m),n.forEach(y=>y(t,S))}},i=()=>t,c={setState:s,getState:i,subscribe:p=>(n.add(p),()=>n.delete(p)),destroy:()=>n.clear()};return t=e(s,i,c),c},Ot=e=>e?xe(e):xe;var Qe={exports:{}},Ge={},Ve={exports:{}},Pe={};/**
 * @license React
 * use-sync-external-store-shim.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var ie=X.exports;function xt(e,t){return e===t&&(e!==0||1/e===1/t)||e!==e&&t!==t}var $t=typeof Object.is=="function"?Object.is:xt,kt=ie.useState,Ut=ie.useEffect,jt=ie.useLayoutEffect,Ct=ie.useDebugValue;function Bt(e,t){var n=t(),s=kt({inst:{value:n,getSnapshot:t}}),i=s[0].inst,a=s[1];return jt(function(){i.value=n,i.getSnapshot=t,we(i)&&a({inst:i})},[e,n,t]),Ut(function(){return we(i)&&a({inst:i}),e(function(){we(i)&&a({inst:i})})},[e]),Ct(n),n}function we(e){var t=e.getSnapshot;e=e.value;try{var n=t();return!$t(e,n)}catch{return!0}}function Qt(e,t){return t()}var Gt=typeof window>"u"||typeof window.document>"u"||typeof window.document.createElement>"u"?Qt:Bt;Pe.useSyncExternalStore=ie.useSyncExternalStore!==void 0?ie.useSyncExternalStore:Gt;(function(e){e.exports=Pe})(Ve);/**
 * @license React
 * use-sync-external-store-shim/with-selector.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var me=X.exports,Vt=Ve.exports;function Pt(e,t){return e===t&&(e!==0||1/e===1/t)||e!==e&&t!==t}var qt=typeof Object.is=="function"?Object.is:Pt,Jt=Vt.useSyncExternalStore,zt=me.useRef,Yt=me.useEffect,Ht=me.useMemo,Wt=me.useDebugValue;Ge.useSyncExternalStoreWithSelector=function(e,t,n,s,i){var a=zt(null);if(a.current===null){var o={hasValue:!1,value:null};a.current=o}else o=a.current;a=Ht(function(){function p(E){if(!_){if(_=!0,m=E,E=s(E),i!==void 0&&o.hasValue){var N=o.value;if(i(N,E))return S=N}return S=E}if(N=S,qt(m,E))return N;var te=s(E);return i!==void 0&&i(N,te)?N:(m=E,S=te)}var _=!1,m,S,y=n===void 0?null:n;return[function(){return p(t())},y===null?void 0:function(){return p(y())}]},[t,n,s,i]);var c=Jt(e,a[0],a[1]);return Yt(function(){o.hasValue=!0,o.value=c},[c]),Wt(c),c};(function(e){e.exports=Ge})(Qe);const Zt=wt(Qe.exports),{useSyncExternalStoreWithSelector:Xt}=Zt;function Kt(e,t=e.getState,n){const s=Xt(e.subscribe,e.getState,e.getServerState||e.getState,t,n);return X.exports.useDebugValue(s),s}const $e=e=>{const t=typeof e=="function"?Ot(e):e,n=(s,i)=>Kt(t,s,i);return Object.assign(n,t),n},en=e=>e?$e(e):$e;function tn(){return Be("/operateApi/setting",e=>A.get(e))}function Jn(){return Be("/operateApi",e=>A.get(e))}const nn=5;function sn(e,t){const[n,s]=t?[e,t]:[void 0,e];let i=" Did you mean ";n&&(i+=n+" ");const a=s.map(p=>`"${p}"`);switch(a.length){case 0:return"";case 1:return i+a[0]+"?";case 2:return i+a[0]+" or "+a[1]+"?"}const o=a.slice(0,nn),c=o.pop();return i+o.join(", ")+", or "+c+"?"}function ke(e){return e}function qe(e,t){const n=Object.create(null);for(const s of e)n[t(s)]=s;return n}function K(e,t,n){const s=Object.create(null);for(const i of e)s[t(i)]=n(i);return s}function ye(e,t){const n=Object.create(null);for(const s of Object.keys(e))n[s]=t(e[s],s);return n}function rn(e,t){let n=0,s=0;for(;n<e.length&&s<t.length;){let i=e.charCodeAt(n),a=t.charCodeAt(s);if(de(i)&&de(a)){let o=0;do++n,o=o*10+i-_e,i=e.charCodeAt(n);while(de(i)&&o>0);let c=0;do++s,c=c*10+a-_e,a=t.charCodeAt(s);while(de(a)&&c>0);if(o<c)return-1;if(o>c)return 1}else{if(i<a)return-1;if(i>a)return 1;++n,++s}}return e.length-t.length}const _e=48,an=57;function de(e){return!isNaN(e)&&_e<=e&&e<=an}function on(e,t){const n=Object.create(null),s=new un(e),i=Math.floor(e.length*.4)+1;for(const a of t){const o=s.measure(a,i);o!==void 0&&(n[a]=o)}return Object.keys(n).sort((a,o)=>{const c=n[a]-n[o];return c!==0?c:rn(a,o)})}class un{constructor(t){this._input=t,this._inputLowerCase=t.toLowerCase(),this._inputArray=Ue(this._inputLowerCase),this._rows=[new Array(t.length+1).fill(0),new Array(t.length+1).fill(0),new Array(t.length+1).fill(0)]}measure(t,n){if(this._input===t)return 0;const s=t.toLowerCase();if(this._inputLowerCase===s)return 1;let i=Ue(s),a=this._inputArray;if(i.length<a.length){const m=i;i=a,a=m}const o=i.length,c=a.length;if(o-c>n)return;const p=this._rows;for(let m=0;m<=c;m++)p[0][m]=m;for(let m=1;m<=o;m++){const S=p[(m-1)%3],y=p[m%3];let E=y[0]=m;for(let N=1;N<=c;N++){const te=i[m-1]===a[N-1]?0:1;let W=Math.min(S[N]+1,y[N-1]+1,S[N-1]+te);if(m>1&&N>1&&i[m-1]===a[N-2]&&i[m-2]===a[N-1]){const ge=p[(m-2)%3][N-2];W=Math.min(W,ge+1)}W<E&&(E=W),y[N]=W}if(E>n)return}const _=p[o%3][c];return _<=n?_:void 0}}function Ue(e){const t=e.length,n=new Array(t);for(let s=0;s<t;++s)n[s]=e.charCodeAt(s);return n}function $(e){if(e==null)return Object.create(null);if(Object.getPrototypeOf(e)===null)return e;const t=Object.create(null);for(const[n,s]of Object.entries(e))t[n]=s;return t}function Ae(e,t){switch(e.kind){case f.NULL:return null;case f.INT:return parseInt(e.value,10);case f.FLOAT:return parseFloat(e.value);case f.STRING:case f.ENUM:case f.BOOLEAN:return e.value;case f.LIST:return e.values.map(n=>Ae(n,t));case f.OBJECT:return K(e.fields,n=>n.name.value,n=>Ae(n.value,t));case f.VARIABLE:return t==null?void 0:t[e.name.value]}}function C(e){if(e!=null||b(!1,"Must provide name."),typeof e=="string"||b(!1,"Expected name to be a string."),e.length===0)throw new g("Expected name to be a non-empty string.");for(let t=1;t<e.length;++t)if(!Dt(e.charCodeAt(t)))throw new g(`Names must only contain [_a-zA-Z0-9] but "${e}" does not.`);if(!Mt(e.charCodeAt(0)))throw new g(`Names must start with [_a-zA-Z] but "${e}" does not.`);return e}function cn(e){if(e==="true"||e==="false"||e==="null")throw new g(`Enum values cannot be named: ${e}`);return C(e)}function Je(e){return re(e)||Q(e)||M(e)||q(e)||z(e)||Y(e)||ce(e)||O(e)}function re(e){return G(e,ee)}function Q(e){return G(e,H)}function ln(e){if(!Q(e))throw new Error(`Expected ${l(e)} to be a GraphQL Object type.`);return e}function M(e){return G(e,rt)}function dn(e){if(!M(e))throw new Error(`Expected ${l(e)} to be a GraphQL Interface type.`);return e}function q(e){return G(e,at)}function z(e){return G(e,ve)}function Y(e){return G(e,ot)}function ce(e){return G(e,F)}function O(e){return G(e,h)}function ze(e){return re(e)||z(e)||Y(e)||De(e)&&ze(e.ofType)}function Ye(e){return re(e)||Q(e)||M(e)||q(e)||z(e)||De(e)&&Ye(e.ofType)}function He(e){return re(e)||z(e)}function zn(e){return Q(e)||M(e)||q(e)}function We(e){return M(e)||q(e)}function Yn(e){if(!We(e))throw new Error(`Expected ${l(e)} to be a GraphQL abstract type.`);return e}class F{constructor(t){Je(t)||b(!1,`Expected ${l(t)} to be a GraphQL type.`),this.ofType=t}get[Symbol.toStringTag](){return"GraphQLList"}toString(){return"["+String(this.ofType)+"]"}toJSON(){return this.toString()}}class h{constructor(t){Ze(t)||b(!1,`Expected ${l(t)} to be a GraphQL nullable type.`),this.ofType=t}get[Symbol.toStringTag](){return"GraphQLNonNull"}toString(){return String(this.ofType)+"!"}toJSON(){return this.toString()}}function De(e){return ce(e)||O(e)}function Ze(e){return Je(e)&&!O(e)}function pn(e){if(!Ze(e))throw new Error(`Expected ${l(e)} to be a GraphQL nullable type.`);return e}function Hn(e){if(e)return O(e)?e.ofType:e}function Wn(e){return re(e)||Q(e)||M(e)||q(e)||z(e)||Y(e)}function fn(e){if(e){let t=e;for(;De(t);)t=t.ofType;return t}}function Xe(e){return typeof e=="function"?e():e}function Ke(e){return typeof e=="function"?e():e}class ee{constructor(t){var n,s,i,a;const o=(n=t.parseValue)!==null&&n!==void 0?n:ke;this.name=C(t.name),this.description=t.description,this.specifiedByURL=t.specifiedByURL,this.serialize=(s=t.serialize)!==null&&s!==void 0?s:ke,this.parseValue=o,this.parseLiteral=(i=t.parseLiteral)!==null&&i!==void 0?i:(c,p)=>o(Ae(c,p)),this.extensions=$(t.extensions),this.astNode=t.astNode,this.extensionASTNodes=(a=t.extensionASTNodes)!==null&&a!==void 0?a:[],t.specifiedByURL==null||typeof t.specifiedByURL=="string"||b(!1,`${this.name} must provide "specifiedByURL" as a string, but got: ${l(t.specifiedByURL)}.`),t.serialize==null||typeof t.serialize=="function"||b(!1,`${this.name} must provide "serialize" function. If this custom Scalar is also used as an input type, ensure "parseValue" and "parseLiteral" functions are also provided.`),t.parseLiteral&&(typeof t.parseValue=="function"&&typeof t.parseLiteral=="function"||b(!1,`${this.name} must provide both "parseValue" and "parseLiteral" functions.`))}get[Symbol.toStringTag](){return"GraphQLScalarType"}toConfig(){return{name:this.name,description:this.description,specifiedByURL:this.specifiedByURL,serialize:this.serialize,parseValue:this.parseValue,parseLiteral:this.parseLiteral,extensions:this.extensions,astNode:this.astNode,extensionASTNodes:this.extensionASTNodes}}toString(){return this.name}toJSON(){return this.toString()}}class H{constructor(t){var n;this.name=C(t.name),this.description=t.description,this.isTypeOf=t.isTypeOf,this.extensions=$(t.extensions),this.astNode=t.astNode,this.extensionASTNodes=(n=t.extensionASTNodes)!==null&&n!==void 0?n:[],this._fields=()=>tt(t),this._interfaces=()=>et(t),t.isTypeOf==null||typeof t.isTypeOf=="function"||b(!1,`${this.name} must provide "isTypeOf" as a function, but got: ${l(t.isTypeOf)}.`)}get[Symbol.toStringTag](){return"GraphQLObjectType"}getFields(){return typeof this._fields=="function"&&(this._fields=this._fields()),this._fields}getInterfaces(){return typeof this._interfaces=="function"&&(this._interfaces=this._interfaces()),this._interfaces}toConfig(){return{name:this.name,description:this.description,interfaces:this.getInterfaces(),fields:st(this.getFields()),isTypeOf:this.isTypeOf,extensions:this.extensions,astNode:this.astNode,extensionASTNodes:this.extensionASTNodes}}toString(){return this.name}toJSON(){return this.toString()}}function et(e){var t;const n=Xe((t=e.interfaces)!==null&&t!==void 0?t:[]);return Array.isArray(n)||b(!1,`${e.name} interfaces must be an Array or a function which returns an Array.`),n}function tt(e){const t=Ke(e.fields);return se(t)||b(!1,`${e.name} fields must be an object with field names as keys or a function which returns such an object.`),ye(t,(n,s)=>{var i;se(n)||b(!1,`${e.name}.${s} field config must be an object.`),n.resolve==null||typeof n.resolve=="function"||b(!1,`${e.name}.${s} field resolver must be a function if provided, but got: ${l(n.resolve)}.`);const a=(i=n.args)!==null&&i!==void 0?i:{};return se(a)||b(!1,`${e.name}.${s} args must be an object with argument names as keys.`),{name:C(s),description:n.description,type:n.type,args:nt(a),resolve:n.resolve,subscribe:n.subscribe,deprecationReason:n.deprecationReason,extensions:$(n.extensions),astNode:n.astNode}})}function nt(e){return Object.entries(e).map(([t,n])=>({name:C(t),description:n.description,type:n.type,defaultValue:n.defaultValue,deprecationReason:n.deprecationReason,extensions:$(n.extensions),astNode:n.astNode}))}function se(e){return J(e)&&!Array.isArray(e)}function st(e){return ye(e,t=>({description:t.description,type:t.type,args:it(t.args),resolve:t.resolve,subscribe:t.subscribe,deprecationReason:t.deprecationReason,extensions:t.extensions,astNode:t.astNode}))}function it(e){return K(e,t=>t.name,t=>({description:t.description,type:t.type,defaultValue:t.defaultValue,deprecationReason:t.deprecationReason,extensions:t.extensions,astNode:t.astNode}))}function Zn(e){return O(e.type)&&e.defaultValue===void 0}class rt{constructor(t){var n;this.name=C(t.name),this.description=t.description,this.resolveType=t.resolveType,this.extensions=$(t.extensions),this.astNode=t.astNode,this.extensionASTNodes=(n=t.extensionASTNodes)!==null&&n!==void 0?n:[],this._fields=tt.bind(void 0,t),this._interfaces=et.bind(void 0,t),t.resolveType==null||typeof t.resolveType=="function"||b(!1,`${this.name} must provide "resolveType" as a function, but got: ${l(t.resolveType)}.`)}get[Symbol.toStringTag](){return"GraphQLInterfaceType"}getFields(){return typeof this._fields=="function"&&(this._fields=this._fields()),this._fields}getInterfaces(){return typeof this._interfaces=="function"&&(this._interfaces=this._interfaces()),this._interfaces}toConfig(){return{name:this.name,description:this.description,interfaces:this.getInterfaces(),fields:st(this.getFields()),resolveType:this.resolveType,extensions:this.extensions,astNode:this.astNode,extensionASTNodes:this.extensionASTNodes}}toString(){return this.name}toJSON(){return this.toString()}}class at{constructor(t){var n;this.name=C(t.name),this.description=t.description,this.resolveType=t.resolveType,this.extensions=$(t.extensions),this.astNode=t.astNode,this.extensionASTNodes=(n=t.extensionASTNodes)!==null&&n!==void 0?n:[],this._types=hn.bind(void 0,t),t.resolveType==null||typeof t.resolveType=="function"||b(!1,`${this.name} must provide "resolveType" as a function, but got: ${l(t.resolveType)}.`)}get[Symbol.toStringTag](){return"GraphQLUnionType"}getTypes(){return typeof this._types=="function"&&(this._types=this._types()),this._types}toConfig(){return{name:this.name,description:this.description,types:this.getTypes(),resolveType:this.resolveType,extensions:this.extensions,astNode:this.astNode,extensionASTNodes:this.extensionASTNodes}}toString(){return this.name}toJSON(){return this.toString()}}function hn(e){const t=Xe(e.types);return Array.isArray(t)||b(!1,`Must provide Array of types or a function which returns such an array for Union ${e.name}.`),t}class ve{constructor(t){var n;this.name=C(t.name),this.description=t.description,this.extensions=$(t.extensions),this.astNode=t.astNode,this.extensionASTNodes=(n=t.extensionASTNodes)!==null&&n!==void 0?n:[],this._values=mn(this.name,t.values),this._valueLookup=new Map(this._values.map(s=>[s.value,s])),this._nameLookup=qe(this._values,s=>s.name)}get[Symbol.toStringTag](){return"GraphQLEnumType"}getValues(){return this._values}getValue(t){return this._nameLookup[t]}serialize(t){const n=this._valueLookup.get(t);if(n===void 0)throw new g(`Enum "${this.name}" cannot represent value: ${l(t)}`);return n.name}parseValue(t){if(typeof t!="string"){const s=l(t);throw new g(`Enum "${this.name}" cannot represent non-string value: ${s}.`+pe(this,s))}const n=this.getValue(t);if(n==null)throw new g(`Value "${t}" does not exist in "${this.name}" enum.`+pe(this,t));return n.value}parseLiteral(t,n){if(t.kind!==f.ENUM){const i=P(t);throw new g(`Enum "${this.name}" cannot represent non-enum value: ${i}.`+pe(this,i),{nodes:t})}const s=this.getValue(t.value);if(s==null){const i=P(t);throw new g(`Value "${i}" does not exist in "${this.name}" enum.`+pe(this,i),{nodes:t})}return s.value}toConfig(){const t=K(this.getValues(),n=>n.name,n=>({description:n.description,value:n.value,deprecationReason:n.deprecationReason,extensions:n.extensions,astNode:n.astNode}));return{name:this.name,description:this.description,values:t,extensions:this.extensions,astNode:this.astNode,extensionASTNodes:this.extensionASTNodes}}toString(){return this.name}toJSON(){return this.toString()}}function pe(e,t){const n=e.getValues().map(i=>i.name),s=on(t,n);return sn("the enum value",s)}function mn(e,t){return se(t)||b(!1,`${e} values must be an object with value names as keys.`),Object.entries(t).map(([n,s])=>(se(s)||b(!1,`${e}.${n} must refer to an object with a "value" key representing an internal value but got: ${l(s)}.`),{name:cn(n),description:s.description,value:s.value!==void 0?s.value:n,deprecationReason:s.deprecationReason,extensions:$(s.extensions),astNode:s.astNode}))}class ot{constructor(t){var n;this.name=C(t.name),this.description=t.description,this.extensions=$(t.extensions),this.astNode=t.astNode,this.extensionASTNodes=(n=t.extensionASTNodes)!==null&&n!==void 0?n:[],this._fields=yn.bind(void 0,t)}get[Symbol.toStringTag](){return"GraphQLInputObjectType"}getFields(){return typeof this._fields=="function"&&(this._fields=this._fields()),this._fields}toConfig(){const t=ye(this.getFields(),n=>({description:n.description,type:n.type,defaultValue:n.defaultValue,deprecationReason:n.deprecationReason,extensions:n.extensions,astNode:n.astNode}));return{name:this.name,description:this.description,fields:t,extensions:this.extensions,astNode:this.astNode,extensionASTNodes:this.extensionASTNodes}}toString(){return this.name}toJSON(){return this.toString()}}function yn(e){const t=Ke(e.fields);return se(t)||b(!1,`${e.name} fields must be an object with field names as keys or a function which returns such an object.`),ye(t,(n,s)=>(!("resolve"in n)||b(!1,`${e.name}.${s} field has a resolve property, but Input Types cannot define resolvers.`),{name:C(s),description:n.description,type:n.type,defaultValue:n.defaultValue,deprecationReason:n.deprecationReason,extensions:$(n.extensions),astNode:n.astNode}))}function Xn(e){return O(e.type)&&e.defaultValue===void 0}const Ee=2147483647,Ie=-2147483648,vn=new ee({name:"Int",description:"The `Int` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.",serialize(e){const t=le(e);if(typeof t=="boolean")return t?1:0;let n=t;if(typeof t=="string"&&t!==""&&(n=Number(t)),typeof n!="number"||!Number.isInteger(n))throw new g(`Int cannot represent non-integer value: ${l(t)}`);if(n>Ee||n<Ie)throw new g("Int cannot represent non 32-bit signed integer value: "+l(t));return n},parseValue(e){if(typeof e!="number"||!Number.isInteger(e))throw new g(`Int cannot represent non-integer value: ${l(e)}`);if(e>Ee||e<Ie)throw new g(`Int cannot represent non 32-bit signed integer value: ${e}`);return e},parseLiteral(e){if(e.kind!==f.INT)throw new g(`Int cannot represent non-integer value: ${P(e)}`,{nodes:e});const t=parseInt(e.value,10);if(t>Ee||t<Ie)throw new g(`Int cannot represent non 32-bit signed integer value: ${e.value}`,{nodes:e});return t}}),Tn=new ee({name:"Float",description:"The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point).",serialize(e){const t=le(e);if(typeof t=="boolean")return t?1:0;let n=t;if(typeof t=="string"&&t!==""&&(n=Number(t)),typeof n!="number"||!Number.isFinite(n))throw new g(`Float cannot represent non numeric value: ${l(t)}`);return n},parseValue(e){if(typeof e!="number"||!Number.isFinite(e))throw new g(`Float cannot represent non numeric value: ${l(e)}`);return e},parseLiteral(e){if(e.kind!==f.FLOAT&&e.kind!==f.INT)throw new g(`Float cannot represent non numeric value: ${P(e)}`,e);return parseFloat(e.value)}}),w=new ee({name:"String",description:"The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.",serialize(e){const t=le(e);if(typeof t=="string")return t;if(typeof t=="boolean")return t?"true":"false";if(typeof t=="number"&&Number.isFinite(t))return t.toString();throw new g(`String cannot represent value: ${l(e)}`)},parseValue(e){if(typeof e!="string")throw new g(`String cannot represent a non string value: ${l(e)}`);return e},parseLiteral(e){if(e.kind!==f.STRING)throw new g(`String cannot represent a non string value: ${P(e)}`,{nodes:e});return e.value}}),x=new ee({name:"Boolean",description:"The `Boolean` scalar type represents `true` or `false`.",serialize(e){const t=le(e);if(typeof t=="boolean")return t;if(Number.isFinite(t))return t!==0;throw new g(`Boolean cannot represent a non boolean value: ${l(t)}`)},parseValue(e){if(typeof e!="boolean")throw new g(`Boolean cannot represent a non boolean value: ${l(e)}`);return e},parseLiteral(e){if(e.kind!==f.BOOLEAN)throw new g(`Boolean cannot represent a non boolean value: ${P(e)}`,{nodes:e});return e.value}}),ut=new ee({name:"ID",description:'The `ID` scalar type represents a unique identifier, often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `"4"`) or integer (such as `4`) input value will be accepted as an ID.',serialize(e){const t=le(e);if(typeof t=="string")return t;if(Number.isInteger(t))return String(t);throw new g(`ID cannot represent value: ${l(e)}`)},parseValue(e){if(typeof e=="string")return e;if(typeof e=="number"&&Number.isInteger(e))return e.toString();throw new g(`ID cannot represent value: ${l(e)}`)},parseLiteral(e){if(e.kind!==f.STRING&&e.kind!==f.INT)throw new g("ID cannot represent a non-string and non-integer value: "+P(e),{nodes:e});return e.value}}),gn=Object.freeze([w,vn,Tn,x,ut]);function le(e){if(J(e)){if(typeof e.valueOf=="function"){const t=e.valueOf();if(!J(t))return t}if(typeof e.toJSON=="function")return e.toJSON()}return e}function bn(e){return G(e,ae)}class ae{constructor(t){var n,s;this.name=C(t.name),this.description=t.description,this.locations=t.locations,this.isRepeatable=(n=t.isRepeatable)!==null&&n!==void 0?n:!1,this.extensions=$(t.extensions),this.astNode=t.astNode,Array.isArray(t.locations)||b(!1,`@${t.name} locations must be an Array.`);const i=(s=t.args)!==null&&s!==void 0?s:{};J(i)&&!Array.isArray(i)||b(!1,`@${t.name} args must be an object with argument names as keys.`),this.args=nt(i)}get[Symbol.toStringTag](){return"GraphQLDirective"}toConfig(){return{name:this.name,description:this.description,locations:this.locations,args:it(this.args),isRepeatable:this.isRepeatable,extensions:this.extensions,astNode:this.astNode}}toString(){return"@"+this.name}toJSON(){return this.toString()}}const Nn=new ae({name:"include",description:"Directs the executor to include this field or fragment only when the `if` argument is true.",locations:[v.FIELD,v.FRAGMENT_SPREAD,v.INLINE_FRAGMENT],args:{if:{type:new h(x),description:"Included when true."}}}),wn=new ae({name:"skip",description:"Directs the executor to skip this field or fragment when the `if` argument is true.",locations:[v.FIELD,v.FRAGMENT_SPREAD,v.INLINE_FRAGMENT],args:{if:{type:new h(x),description:"Skipped when true."}}}),En="No longer supported",In=new ae({name:"deprecated",description:"Marks an element of a GraphQL schema as no longer supported.",locations:[v.FIELD_DEFINITION,v.ARGUMENT_DEFINITION,v.INPUT_FIELD_DEFINITION,v.ENUM_VALUE],args:{reason:{type:w,description:"Explains why this element was deprecated, usually also including a suggestion for how to access supported similar data. Formatted using the Markdown syntax, as specified by [CommonMark](https://commonmark.org/).",defaultValue:En}}}),Sn=new ae({name:"specifiedBy",description:"Exposes a URL that specifies the behavior of this scalar.",locations:[v.SCALAR],args:{url:{type:new h(w),description:"The URL that specifies the behavior of this scalar."}}}),_n=Object.freeze([Nn,wn,In,Sn]);function An(e){return typeof e=="object"&&typeof(e==null?void 0:e[Symbol.iterator])=="function"}function oe(e,t){if(O(t)){const n=oe(e,t.ofType);return(n==null?void 0:n.kind)===f.NULL?null:n}if(e===null)return{kind:f.NULL};if(e===void 0)return null;if(ce(t)){const n=t.ofType;if(An(e)){const s=[];for(const i of e){const a=oe(i,n);a!=null&&s.push(a)}return{kind:f.LIST,values:s}}return oe(e,n)}if(Y(t)){if(!J(e))return null;const n=[];for(const s of Object.values(t.getFields())){const i=oe(e[s.name],s.type);i&&n.push({kind:f.OBJECT_FIELD,name:{kind:f.NAME,value:s.name},value:i})}return{kind:f.OBJECT,fields:n}}if(He(t)){const n=t.serialize(e);if(n==null)return null;if(typeof n=="boolean")return{kind:f.BOOLEAN,value:n};if(typeof n=="number"&&Number.isFinite(n)){const s=String(n);return je.test(s)?{kind:f.INT,value:s}:{kind:f.FLOAT,value:s}}if(typeof n=="string")return z(t)?{kind:f.ENUM,value:n}:t===ut&&je.test(n)?{kind:f.INT,value:n}:{kind:f.STRING,value:n};throw new TypeError(`Cannot convert value to AST: ${l(n)}.`)}Le(!1,"Unexpected input type: "+l(t))}const je=/^-?(?:0|[1-9][0-9]*)$/,Me=new H({name:"__Schema",description:"A GraphQL Schema defines the capabilities of a GraphQL server. It exposes all available types and directives on the server, as well as the entry points for query, mutation, and subscription operations.",fields:()=>({description:{type:w,resolve:e=>e.description},types:{description:"A list of all types supported by this server.",type:new h(new F(new h(j))),resolve(e){return Object.values(e.getTypeMap())}},queryType:{description:"The type that query operations will be rooted at.",type:new h(j),resolve:e=>e.getQueryType()},mutationType:{description:"If this server supports mutation, the type that mutation operations will be rooted at.",type:j,resolve:e=>e.getMutationType()},subscriptionType:{description:"If this server support subscription, the type that subscription operations will be rooted at.",type:j,resolve:e=>e.getSubscriptionType()},directives:{description:"A list of all directives supported by this server.",type:new h(new F(new h(ct))),resolve:e=>e.getDirectives()}})}),ct=new H({name:"__Directive",description:`A Directive provides a way to describe alternate runtime execution and type validation behavior in a GraphQL document.

In some cases, you need to provide options to alter GraphQL's execution behavior in ways field arguments will not suffice, such as conditionally including or skipping a field. Directives provide this by describing additional information to the executor.`,fields:()=>({name:{type:new h(w),resolve:e=>e.name},description:{type:w,resolve:e=>e.description},isRepeatable:{type:new h(x),resolve:e=>e.isRepeatable},locations:{type:new h(new F(new h(lt))),resolve:e=>e.locations},args:{type:new h(new F(new h(Te))),args:{includeDeprecated:{type:x,defaultValue:!1}},resolve(e,{includeDeprecated:t}){return t?e.args:e.args.filter(n=>n.deprecationReason==null)}}})}),lt=new ve({name:"__DirectiveLocation",description:"A Directive can be adjacent to many parts of the GraphQL language, a __DirectiveLocation describes one such possible adjacencies.",values:{QUERY:{value:v.QUERY,description:"Location adjacent to a query operation."},MUTATION:{value:v.MUTATION,description:"Location adjacent to a mutation operation."},SUBSCRIPTION:{value:v.SUBSCRIPTION,description:"Location adjacent to a subscription operation."},FIELD:{value:v.FIELD,description:"Location adjacent to a field."},FRAGMENT_DEFINITION:{value:v.FRAGMENT_DEFINITION,description:"Location adjacent to a fragment definition."},FRAGMENT_SPREAD:{value:v.FRAGMENT_SPREAD,description:"Location adjacent to a fragment spread."},INLINE_FRAGMENT:{value:v.INLINE_FRAGMENT,description:"Location adjacent to an inline fragment."},VARIABLE_DEFINITION:{value:v.VARIABLE_DEFINITION,description:"Location adjacent to a variable definition."},SCHEMA:{value:v.SCHEMA,description:"Location adjacent to a schema definition."},SCALAR:{value:v.SCALAR,description:"Location adjacent to a scalar definition."},OBJECT:{value:v.OBJECT,description:"Location adjacent to an object type definition."},FIELD_DEFINITION:{value:v.FIELD_DEFINITION,description:"Location adjacent to a field definition."},ARGUMENT_DEFINITION:{value:v.ARGUMENT_DEFINITION,description:"Location adjacent to an argument definition."},INTERFACE:{value:v.INTERFACE,description:"Location adjacent to an interface definition."},UNION:{value:v.UNION,description:"Location adjacent to a union definition."},ENUM:{value:v.ENUM,description:"Location adjacent to an enum definition."},ENUM_VALUE:{value:v.ENUM_VALUE,description:"Location adjacent to an enum value definition."},INPUT_OBJECT:{value:v.INPUT_OBJECT,description:"Location adjacent to an input object type definition."},INPUT_FIELD_DEFINITION:{value:v.INPUT_FIELD_DEFINITION,description:"Location adjacent to an input object field definition."}}}),j=new H({name:"__Type",description:"The fundamental unit of any GraphQL Schema is the type. There are many kinds of types in GraphQL as represented by the `__TypeKind` enum.\n\nDepending on the kind of a type, certain fields describe information about that type. Scalar types provide no information beyond a name, description and optional `specifiedByURL`, while Enum types provide their values. Object and Interface types provide the fields they describe. Abstract types, Union and Interface, provide the Object types possible at runtime. List and NonNull types compose other types.",fields:()=>({kind:{type:new h(ft),resolve(e){if(re(e))return T.SCALAR;if(Q(e))return T.OBJECT;if(M(e))return T.INTERFACE;if(q(e))return T.UNION;if(z(e))return T.ENUM;if(Y(e))return T.INPUT_OBJECT;if(ce(e))return T.LIST;if(O(e))return T.NON_NULL;Le(!1,`Unexpected type: "${l(e)}".`)}},name:{type:w,resolve:e=>"name"in e?e.name:void 0},description:{type:w,resolve:e=>"description"in e?e.description:void 0},specifiedByURL:{type:w,resolve:e=>"specifiedByURL"in e?e.specifiedByURL:void 0},fields:{type:new F(new h(dt)),args:{includeDeprecated:{type:x,defaultValue:!1}},resolve(e,{includeDeprecated:t}){if(Q(e)||M(e)){const n=Object.values(e.getFields());return t?n:n.filter(s=>s.deprecationReason==null)}}},interfaces:{type:new F(new h(j)),resolve(e){if(Q(e)||M(e))return e.getInterfaces()}},possibleTypes:{type:new F(new h(j)),resolve(e,t,n,{schema:s}){if(We(e))return s.getPossibleTypes(e)}},enumValues:{type:new F(new h(pt)),args:{includeDeprecated:{type:x,defaultValue:!1}},resolve(e,{includeDeprecated:t}){if(z(e)){const n=e.getValues();return t?n:n.filter(s=>s.deprecationReason==null)}}},inputFields:{type:new F(new h(Te)),args:{includeDeprecated:{type:x,defaultValue:!1}},resolve(e,{includeDeprecated:t}){if(Y(e)){const n=Object.values(e.getFields());return t?n:n.filter(s=>s.deprecationReason==null)}}},ofType:{type:j,resolve:e=>"ofType"in e?e.ofType:void 0}})}),dt=new H({name:"__Field",description:"Object and Interface types are described by a list of Fields, each of which has a name, potentially a list of arguments, and a return type.",fields:()=>({name:{type:new h(w),resolve:e=>e.name},description:{type:w,resolve:e=>e.description},args:{type:new h(new F(new h(Te))),args:{includeDeprecated:{type:x,defaultValue:!1}},resolve(e,{includeDeprecated:t}){return t?e.args:e.args.filter(n=>n.deprecationReason==null)}},type:{type:new h(j),resolve:e=>e.type},isDeprecated:{type:new h(x),resolve:e=>e.deprecationReason!=null},deprecationReason:{type:w,resolve:e=>e.deprecationReason}})}),Te=new H({name:"__InputValue",description:"Arguments provided to Fields or Directives and the input fields of an InputObject are represented as Input Values which describe their type and optionally a default value.",fields:()=>({name:{type:new h(w),resolve:e=>e.name},description:{type:w,resolve:e=>e.description},type:{type:new h(j),resolve:e=>e.type},defaultValue:{type:w,description:"A GraphQL-formatted string representing the default value for this input value.",resolve(e){const{type:t,defaultValue:n}=e,s=oe(n,t);return s?P(s):null}},isDeprecated:{type:new h(x),resolve:e=>e.deprecationReason!=null},deprecationReason:{type:w,resolve:e=>e.deprecationReason}})}),pt=new H({name:"__EnumValue",description:"One possible value for a given Enum. Enum values are unique values, not a placeholder for a string or numeric value. However an Enum value is returned in a JSON response as a string.",fields:()=>({name:{type:new h(w),resolve:e=>e.name},description:{type:w,resolve:e=>e.description},isDeprecated:{type:new h(x),resolve:e=>e.deprecationReason!=null},deprecationReason:{type:w,resolve:e=>e.deprecationReason}})});var T;(function(e){e.SCALAR="SCALAR",e.OBJECT="OBJECT",e.INTERFACE="INTERFACE",e.UNION="UNION",e.ENUM="ENUM",e.INPUT_OBJECT="INPUT_OBJECT",e.LIST="LIST",e.NON_NULL="NON_NULL"})(T||(T={}));const ft=new ve({name:"__TypeKind",description:"An enum describing what kind of type a given `__Type` is.",values:{SCALAR:{value:T.SCALAR,description:"Indicates this type is a scalar."},OBJECT:{value:T.OBJECT,description:"Indicates this type is an object. `fields` and `interfaces` are valid fields."},INTERFACE:{value:T.INTERFACE,description:"Indicates this type is an interface. `fields`, `interfaces`, and `possibleTypes` are valid fields."},UNION:{value:T.UNION,description:"Indicates this type is a union. `possibleTypes` is a valid field."},ENUM:{value:T.ENUM,description:"Indicates this type is an enum. `enumValues` is a valid field."},INPUT_OBJECT:{value:T.INPUT_OBJECT,description:"Indicates this type is an input object. `inputFields` is a valid field."},LIST:{value:T.LIST,description:"Indicates this type is a list. `ofType` is a valid field."},NON_NULL:{value:T.NON_NULL,description:"Indicates this type is a non-null. `ofType` is a valid field."}}}),Kn={name:"__schema",type:new h(Me),description:"Access the current type schema of this server.",args:[],resolve:(e,t,n,{schema:s})=>s,deprecationReason:void 0,extensions:Object.create(null),astNode:void 0},es={name:"__type",type:j,description:"Request the type information of a single type.",args:[{name:"name",description:void 0,type:new h(w),defaultValue:void 0,deprecationReason:void 0,extensions:Object.create(null),astNode:void 0}],resolve:(e,{name:t},n,{schema:s})=>s.getType(t),deprecationReason:void 0,extensions:Object.create(null),astNode:void 0},ts={name:"__typename",type:new h(w),description:"The name of the current Object type at runtime.",args:[],resolve:(e,t,n,{parentType:s})=>s.name,deprecationReason:void 0,extensions:Object.create(null),astNode:void 0},ht=Object.freeze([Me,ct,lt,j,dt,Te,pt,ft]);function ns(e){return ht.some(({name:t})=>e.name===t)}function Ln(e){return G(e,mt)}function ss(e){if(!Ln(e))throw new Error(`Expected ${l(e)} to be a GraphQL schema.`);return e}class mt{constructor(t){var n,s;this.__validationErrors=t.assumeValid===!0?[]:void 0,J(t)||b(!1,"Must provide configuration object."),!t.types||Array.isArray(t.types)||b(!1,`"types" must be Array if provided but got: ${l(t.types)}.`),!t.directives||Array.isArray(t.directives)||b(!1,`"directives" must be Array if provided but got: ${l(t.directives)}.`),this.description=t.description,this.extensions=$(t.extensions),this.astNode=t.astNode,this.extensionASTNodes=(n=t.extensionASTNodes)!==null&&n!==void 0?n:[],this._queryType=t.query,this._mutationType=t.mutation,this._subscriptionType=t.subscription,this._directives=(s=t.directives)!==null&&s!==void 0?s:_n;const i=new Set(t.types);if(t.types!=null)for(const a of t.types)i.delete(a),U(a,i);this._queryType!=null&&U(this._queryType,i),this._mutationType!=null&&U(this._mutationType,i),this._subscriptionType!=null&&U(this._subscriptionType,i);for(const a of this._directives)if(bn(a))for(const o of a.args)U(o.type,i);U(Me,i),this._typeMap=Object.create(null),this._subTypeMap=Object.create(null),this._implementationsMap=Object.create(null);for(const a of i){if(a==null)continue;const o=a.name;if(o||b(!1,"One of the provided types for building the Schema is missing a name."),this._typeMap[o]!==void 0)throw new Error(`Schema must contain uniquely named types but contains multiple types named "${o}".`);if(this._typeMap[o]=a,M(a)){for(const c of a.getInterfaces())if(M(c)){let p=this._implementationsMap[c.name];p===void 0&&(p=this._implementationsMap[c.name]={objects:[],interfaces:[]}),p.interfaces.push(a)}}else if(Q(a)){for(const c of a.getInterfaces())if(M(c)){let p=this._implementationsMap[c.name];p===void 0&&(p=this._implementationsMap[c.name]={objects:[],interfaces:[]}),p.objects.push(a)}}}}get[Symbol.toStringTag](){return"GraphQLSchema"}getQueryType(){return this._queryType}getMutationType(){return this._mutationType}getSubscriptionType(){return this._subscriptionType}getRootType(t){switch(t){case V.QUERY:return this.getQueryType();case V.MUTATION:return this.getMutationType();case V.SUBSCRIPTION:return this.getSubscriptionType()}}getTypeMap(){return this._typeMap}getType(t){return this.getTypeMap()[t]}getPossibleTypes(t){return q(t)?t.getTypes():this.getImplementations(t).objects}getImplementations(t){const n=this._implementationsMap[t.name];return n!=null?n:{objects:[],interfaces:[]}}isSubType(t,n){let s=this._subTypeMap[t.name];if(s===void 0){if(s=Object.create(null),q(t))for(const i of t.getTypes())s[i.name]=!0;else{const i=this.getImplementations(t);for(const a of i.objects)s[a.name]=!0;for(const a of i.interfaces)s[a.name]=!0}this._subTypeMap[t.name]=s}return s[n.name]!==void 0}getDirectives(){return this._directives}getDirective(t){return this.getDirectives().find(n=>n.name===t)}toConfig(){return{description:this.description,query:this.getQueryType(),mutation:this.getMutationType(),subscription:this.getSubscriptionType(),types:Object.values(this.getTypeMap()),directives:this.getDirectives(),extensions:this.extensions,astNode:this.astNode,extensionASTNodes:this.extensionASTNodes,assumeValid:this.__validationErrors!==void 0}}}function U(e,t){const n=fn(e);if(!t.has(n)){if(t.add(n),q(n))for(const s of n.getTypes())U(s,t);else if(Q(n)||M(n)){for(const s of n.getInterfaces())U(s,t);for(const s of Object.values(n.getFields())){U(s.type,t);for(const i of s.args)U(i.type,t)}}else if(Y(n))for(const s of Object.values(n.getFields()))U(s.type,t)}return t}function ue(e,t,n){if(!!e){if(e.kind===f.VARIABLE){const s=e.name.value;if(n==null||n[s]===void 0)return;const i=n[s];return i===null&&O(t)?void 0:i}if(O(t))return e.kind===f.NULL?void 0:ue(e,t.ofType,n);if(e.kind===f.NULL)return null;if(ce(t)){const s=t.ofType;if(e.kind===f.LIST){const a=[];for(const o of e.values)if(Ce(o,n)){if(O(s))return;a.push(null)}else{const c=ue(o,s,n);if(c===void 0)return;a.push(c)}return a}const i=ue(e,s,n);return i===void 0?void 0:[i]}if(Y(t)){if(e.kind!==f.OBJECT)return;const s=Object.create(null),i=qe(e.fields,a=>a.name.value);for(const a of Object.values(t.getFields())){const o=i[a.name];if(!o||Ce(o.value,n)){if(a.defaultValue!==void 0)s[a.name]=a.defaultValue;else if(O(a.type))return;continue}const c=ue(o.value,a.type,n);if(c===void 0)return;s[a.name]=c}return s}if(He(t)){let s;try{s=t.parseLiteral(e,n)}catch{return}return s===void 0?void 0:s}Le(!1,"Unexpected input type: "+l(t))}}function Ce(e,t){return e.kind===f.VARIABLE&&(t==null||t[e.name.value]===void 0)}function Dn(e){const t={descriptions:!0,specifiedByUrl:!1,directiveIsRepeatable:!1,schemaDescription:!1,inputValueDeprecation:!1,...e},n=t.descriptions?"description":"",s=t.specifiedByUrl?"specifiedByURL":"",i=t.directiveIsRepeatable?"isRepeatable":"",a=t.schemaDescription?n:"";function o(c){return t.inputValueDeprecation?c:""}return`
    query IntrospectionQuery {
      __schema {
        ${a}
        queryType { name }
        mutationType { name }
        subscriptionType { name }
        types {
          ...FullType
        }
        directives {
          name
          ${n}
          ${i}
          locations
          args${o("(includeDeprecated: true)")} {
            ...InputValue
          }
        }
      }
    }

    fragment FullType on __Type {
      kind
      name
      ${n}
      ${s}
      fields(includeDeprecated: true) {
        name
        ${n}
        args${o("(includeDeprecated: true)")} {
          ...InputValue
        }
        type {
          ...TypeRef
        }
        isDeprecated
        deprecationReason
      }
      inputFields${o("(includeDeprecated: true)")} {
        ...InputValue
      }
      interfaces {
        ...TypeRef
      }
      enumValues(includeDeprecated: true) {
        name
        ${n}
        isDeprecated
        deprecationReason
      }
      possibleTypes {
        ...TypeRef
      }
    }

    fragment InputValue on __InputValue {
      name
      ${n}
      type { ...TypeRef }
      defaultValue
      ${o("isDeprecated")}
      ${o("deprecationReason")}
    }

    fragment TypeRef on __Type {
      kind
      name
      ofType {
        kind
        name
        ofType {
          kind
          name
          ofType {
            kind
            name
            ofType {
              kind
              name
              ofType {
                kind
                name
                ofType {
                  kind
                  name
                  ofType {
                    kind
                    name
                  }
                }
              }
            }
          }
        }
      }
    }
  `}function Mn(e,t){J(e)&&J(e.__schema)||b(!1,`Invalid or incomplete introspection result. Ensure that you are passing "data" property of introspection response and no "errors" was returned alongside: ${l(e)}.`);const n=e.__schema,s=K(n.types,r=>r.name,r=>y(r));for(const r of[...gn,...ht])s[r.name]&&(s[r.name]=r);const i=n.queryType?m(n.queryType):null,a=n.mutationType?m(n.mutationType):null,o=n.subscriptionType?m(n.subscriptionType):null,c=n.directives?n.directives.map(bt):[];return new mt({description:n.description,query:i,mutation:a,subscription:o,types:Object.values(s),directives:c,assumeValid:t==null?void 0:t.assumeValid});function p(r){if(r.kind===T.LIST){const d=r.ofType;if(!d)throw new Error("Decorated type deeper than introspection query.");return new F(p(d))}if(r.kind===T.NON_NULL){const d=r.ofType;if(!d)throw new Error("Decorated type deeper than introspection query.");const B=p(d);return new h(pn(B))}return _(r)}function _(r){const d=r.name;if(!d)throw new Error(`Unknown type reference: ${l(r)}.`);const B=s[d];if(!B)throw new Error(`Invalid or incomplete schema, unknown type: ${d}. Ensure that a full introspection query is used in order to build a client schema.`);return B}function m(r){return ln(_(r))}function S(r){return dn(_(r))}function y(r){if(r!=null&&r.name!=null&&r.kind!=null)switch(r.kind){case T.SCALAR:return E(r);case T.OBJECT:return te(r);case T.INTERFACE:return W(r);case T.UNION:return ge(r);case T.ENUM:return yt(r);case T.INPUT_OBJECT:return vt(r)}const d=l(r);throw new Error(`Invalid or incomplete introspection result. Ensure that a full introspection query is used in order to build a client schema: ${d}.`)}function E(r){return new ee({name:r.name,description:r.description,specifiedByURL:r.specifiedByURL})}function N(r){if(r.interfaces===null&&r.kind===T.INTERFACE)return[];if(!r.interfaces){const d=l(r);throw new Error(`Introspection result missing interfaces: ${d}.`)}return r.interfaces.map(S)}function te(r){return new H({name:r.name,description:r.description,interfaces:()=>N(r),fields:()=>Re(r)})}function W(r){return new rt({name:r.name,description:r.description,interfaces:()=>N(r),fields:()=>Re(r)})}function ge(r){if(!r.possibleTypes){const d=l(r);throw new Error(`Introspection result missing possibleTypes: ${d}.`)}return new at({name:r.name,description:r.description,types:()=>r.possibleTypes.map(m)})}function yt(r){if(!r.enumValues){const d=l(r);throw new Error(`Introspection result missing enumValues: ${d}.`)}return new ve({name:r.name,description:r.description,values:K(r.enumValues,d=>d.name,d=>({description:d.description,deprecationReason:d.deprecationReason}))})}function vt(r){if(!r.inputFields){const d=l(r);throw new Error(`Introspection result missing inputFields: ${d}.`)}return new ot({name:r.name,description:r.description,fields:()=>be(r.inputFields)})}function Re(r){if(!r.fields)throw new Error(`Introspection result missing fields: ${l(r)}.`);return K(r.fields,d=>d.name,Tt)}function Tt(r){const d=p(r.type);if(!Ye(d)){const B=l(d);throw new Error(`Introspection must provide output type for fields, but received: ${B}.`)}if(!r.args){const B=l(r);throw new Error(`Introspection result missing field args: ${B}.`)}return{description:r.description,deprecationReason:r.deprecationReason,type:d,args:be(r.args)}}function be(r){return K(r,d=>d.name,gt)}function gt(r){const d=p(r.type);if(!ze(d)){const Nt=l(d);throw new Error(`Introspection must provide input type for arguments, but received: ${Nt}.`)}const B=r.defaultValue!=null?ue(Rt(r.defaultValue),d):void 0;return{description:r.description,type:d,defaultValue:B,deprecationReason:r.deprecationReason}}function bt(r){if(!r.args){const d=l(r);throw new Error(`Introspection result missing directive args: ${d}.`)}if(!r.locations){const d=l(r);throw new Error(`Introspection result missing directive locations: ${d}.`)}return new ae({name:r.name,description:r.description,isRepeatable:r.isRepeatable,locations:r.locations.slice(),args:be(r.args)})}}function Rn(e){return Ft(e,{noLocation:!0})}function is(e){return P(e)}const Z="# Generate operation by click graphql schema on the left panel",fe=[];function Fn(e){return!!e&&e.split(`
`).some(t=>{const n=t.trim();return!!n&&!n.match(/^#/)})}let he;const On=new Promise(e=>{he=e}),xn=en((e,t)=>({engineStartCallback:()=>{he==null||he()},apiDesc:void 0,query:Z,editorQuery:Z,lastSavedQuery:void 0,apiID:"",setID:async n=>{e({apiID:n}),await t().refreshAPI(!1),fe.forEach(s=>s())},setQuery(n,s=!1){(!s||!n)&&(n?t().editorQuery===n?n.endsWith(" ")?e({editorQuery:t().editorQuery.slice(0,-1)}):e({editorQuery:t().editorQuery+" "}):e({editorQuery:n}):t().editorQuery===Z?(console.error(3),e({editorQuery:Z+" "})):(console.error(4),e({editorQuery:Z}))),e({query:n||Z});try{if(!Fn(n))e({schemaAST:void 0});else{const i=Rn(n);e({schemaAST:i})}}catch{}},clearHistoryFlag:!1,originSchema:void 0,schema:void 0,schemaAST:void 0,schemaTypeMap:{},_workbenchContext:void 0,computed:{get operationType(){var s,i;const n=(s=t().schemaAST)==null?void 0:s.definitions;if(n)return((i=n[0])==null?void 0:i.kind)===f.OPERATION_DEFINITION?n[0].operation:void 0},get saved(){const{query:n,lastSavedQuery:s}=t();return s===void 0||n===Z&&!s?!0:s===n}},pureUpdateAPI:n=>{e(s=>({apiDesc:{...s.apiDesc,...n}}))},updateAPI:n=>A.put(`/operateApi/${t().apiID}`,n).then(s=>{var i;t().pureUpdateAPI(n),(i=t()._workbenchContext)==null||i.onRefreshMenu("api")}),changeEnable:n=>A.put(`/operateApi/switch/${t().apiID}`,{enable:n}).then(s=>{var i;t().pureUpdateAPI({enable:n}),(i=t()._workbenchContext)==null||i.onRefreshMenu("api")}),updateAPIName:n=>A.put(`/operateApi/rename/${t().apiID}`,{path:n}).then(s=>{var i;t().pureUpdateAPI({path:n,restUrl:t().apiDesc.restUrl.replace(/(\/app\/main\/operations)\/.*$/,`$1${n}`)}),(i=t()._workbenchContext)==null||i.onRefreshMenu("api")}),updateContent:(n,s=!0)=>{const i=t().schemaAST;return!n||!i?(s&&Se.error(Fe.formatMessage({id:"c8WRih",defaultMessage:[{type:0,value:"\u8BF7\u8F93\u5165\u5408\u6CD5\u7684 GraphQL \u67E5\u8BE2\u8BED\u53E5"}]})),!1):i.definitions.length>1?(s&&Se.error(Fe.formatMessage({id:"glR5T7",defaultMessage:[{type:0,value:"\u4E0D\u652F\u6301\u591A\u6761\u67E5\u8BE2\u8BED\u53E5"}]})),!1):A.put(`/operateApi/content/${t().apiID}`,{content:n}).then(async a=>{var o;if(a){const c=n!=null?n:"";return e({lastSavedQuery:c}),(o=t()._workbenchContext)==null||o.onRefreshMenu("api"),A.get(`/operateApi/${t().apiID}`).then(p=>{var _;e({apiDesc:{...p,setting:(_=t().apiDesc)==null?void 0:_.setting}})}),!0}return!1})},autoSave(){return t().updateContent(t().query,!1)},refreshAPI:async(n=!0)=>{var i;const s=t().apiID;try{const[a,o]=await Promise.all([A.get(`/operateApi/${s}`),A.get(`/operateApi/setting/${s}`,{params:{settingType:1}})]);if(e({apiDesc:{...a,setting:o}}),!n){const c=a.content;t().setQuery(c),e({clearHistoryFlag:!t().clearHistoryFlag}),e({lastSavedQuery:c})}}catch{(i=t()._workbenchContext)==null||i.onRefreshMenu("api")}},refreshAPISetting:async()=>{const n=t().apiID,s=await A.get(`/operateApi/setting/${n}`,{params:{settingType:1}});e({apiDesc:{...t().apiDesc,setting:s}})},refreshSchema:async()=>(await On,fetch("/app/main/graphql",{method:"POST",headers:{Accept:"application/json","Content-Type":"application/json","X-FB-Authentication":Et()||""},body:JSON.stringify({query:Dn()})}).then(n=>n.json()).then(n=>{const s=n.data;if(!It(t().originSchema,s)){console.log("schema changed");const i=Mn(s);e({originSchema:s,schema:i,schemaTypeMap:Lt(s.__schema.types,"name")})}}).catch(()=>{})),appendToAPIRefresh:n=>{fe.push(n)},dispendToAPIRefresh:n=>{const s=fe.indexOf(n);s>-1&&fe.splice(s,1)},setWorkbenchContext:n=>{e({_workbenchContext:n})}})),$n="_panel_oh85i_1",kn="_splitLine_oh85i_19",Un="_tip_oh85i_25",D={panel:$n,splitLine:kn,tip:Un};function rs(e){const t=St(),{onRefreshMenu:n}=X.exports.useContext(At),[s,i]=X.exports.useState(),[a]=I.useForm(),{data:o,mutate:c}=tn();X.exports.useEffect(()=>{e.id&&A.get(`/operateApi/setting/${e.id}`).then(y=>{i(y),a.setFieldsValue(y)})},[e.id]),X.exports.useEffect(()=>{let y;s!=null&&s.enable?y=s:o&&(y=o,y.authenticationRequired=!!{[V.QUERY]:o==null?void 0:o.authenticationQueriesRequired,[V.MUTATION]:o==null?void 0:o.authenticationMutationsRequired,[V.SUBSCRIPTION]:o==null?void 0:o.authenticationSubscriptionsRequired}[e.operationType||V.QUERY]),a.setFieldsValue(y)},[s,o]);const{refreshAPI:p}=xn(),_=(y,E)=>{if(e.type==="panel"){if(y.enable!==void 0){A.put(`/operateApi/setting/${e.id}`,{...s,enable:y.enable,settingType:e.id?1:2,id:e.id||0}),i({...s,enable:y.enable}),n("api"),p();return}i({...s,...y}),A.put(`/operateApi/setting/${e.id}`,{...E,settingType:e.id?1:2,id:e.id||0}).then(()=>{y.liveQueryEnable!==void 0&&(n("api"),p()),(y.authenticationRequired!==void 0||y.authenticationQueriesRequired!==void 0||y.authenticationMutationsRequired!==void 0||y.authenticationSubscriptionsRequired!==void 0)&&p()})}},m=y=>{A.put("/operateApi/setting",{...y,settingType:e.id?1:2,id:e.id||0}).then(()=>{var E;Se.success(t.formatMessage({id:"jhfb/7",defaultMessage:[{type:0,value:"\u4FDD\u5B58\u6210\u529F"}]})),c(),(E=e.onClose)==null||E.call(e)})},S=!(s!=null&&s.enable)&&e.type!=="global";return u("div",{className:D[e.type],children:L(I,{form:a,labelCol:{span:8},wrapperCol:{span:16},onFinish:m,autoComplete:"off",labelAlign:"left",onValuesChange:_,children:[e.type!=="global"?L(k,{children:[u(I.Item,{name:"enable",valuePropName:"checked",children:u(_t,{children:u(R,{id:"1ceY2D",defaultMessage:[{type:0,value:"\u4F7F\u7528\u72EC\u7ACB\u914D\u7F6E"}]})})}),u("div",{className:D.splitLine})]}):null,e.type==="global"?L(k,{children:[u("div",{className:D.tip,children:u(R,{id:"s9VtMY",defaultMessage:[{type:0,value:"\u6388\u6743\u914D\u7F6E"}]})}),u(I.Item,{label:t.formatMessage({id:"+GBE25",defaultMessage:[{type:0,value:"\u67E5\u8BE2\u6388\u6743"}]}),children:L(k,{children:[u(I.Item,{noStyle:!0,name:"authenticationQueriesRequired",valuePropName:"checked",children:u(ne,{checkedChildren:t.formatMessage({id:"ZUPzqr",defaultMessage:[{type:0,value:"\u5F00\u542F"}]}),unCheckedChildren:t.formatMessage({id:"47GdDb",defaultMessage:[{type:0,value:"\u5173\u95ED"}]})})}),u("span",{className:D.tip,style:{marginLeft:12},children:u(R,{id:"v9Miyz",defaultMessage:[{type:0,value:"\u67E5\u8BE2\u662F\u5426\u9700\u8981\u767B\u5F55"}]})})]})}),u(I.Item,{label:t.formatMessage({id:"LKhNTW",defaultMessage:[{type:0,value:"\u53D8\u66F4\u6388\u6743"}]}),children:L(k,{children:[u(I.Item,{noStyle:!0,name:"authenticationMutationsRequired",valuePropName:"checked",children:u(ne,{checkedChildren:t.formatMessage({id:"ZUPzqr",defaultMessage:[{type:0,value:"\u5F00\u542F"}]}),unCheckedChildren:t.formatMessage({id:"47GdDb",defaultMessage:[{type:0,value:"\u5173\u95ED"}]})})}),u("span",{className:D.tip,style:{marginLeft:12},children:u(R,{id:"KqTB9T",defaultMessage:[{type:0,value:"\u53D8\u66F4\u662F\u5426\u9700\u8981\u767B\u5F55"}]})})]})}),u(I.Item,{label:t.formatMessage({id:"gb9fzG",defaultMessage:[{type:0,value:"\u8BA2\u9605\u6388\u6743"}]}),children:L(k,{children:[u(I.Item,{noStyle:!0,name:"authenticationSubscriptionsRequired",valuePropName:"checked",children:u(ne,{checkedChildren:t.formatMessage({id:"ZUPzqr",defaultMessage:[{type:0,value:"\u5F00\u542F"}]}),unCheckedChildren:t.formatMessage({id:"47GdDb",defaultMessage:[{type:0,value:"\u5173\u95ED"}]})})}),u("span",{className:D.tip,style:{marginLeft:12},children:u(R,{id:"NcChip",defaultMessage:[{type:0,value:"\u8BA2\u9605\u662F\u5426\u9700\u8981\u767B\u5F55"}]})})]})})]}):u(I.Item,{label:t.formatMessage({id:"O8A9zp",defaultMessage:[{type:0,value:"\u5F00\u542F\u6388\u6743"}]}),children:L(k,{children:[u(I.Item,{noStyle:!0,name:"authenticationRequired",valuePropName:"checked",children:u(ne,{disabled:S,checkedChildren:t.formatMessage({id:"ZUPzqr",defaultMessage:[{type:0,value:"\u5F00\u542F"}]}),unCheckedChildren:t.formatMessage({id:"47GdDb",defaultMessage:[{type:0,value:"\u5173\u95ED"}]})})}),u("span",{className:D.tip,style:{marginLeft:12},children:u(R,{id:"7aMIeB",defaultMessage:[{type:0,value:"\u662F\u5426\u9700\u8981\u767B\u5F55"}]})})]})}),L(k,{children:[e.operationType===V.QUERY||e.type==="global"?L(k,{children:[e.type==="panel"?u("div",{className:D.splitLine}):"",u("div",{className:D.tip,children:u(R,{id:"0jMIH4",defaultMessage:[{type:0,value:"\u7F13\u5B58\u914D\u7F6E"}]})}),u(I.Item,{label:t.formatMessage({id:"n4sB7F",defaultMessage:[{type:0,value:"\u67E5\u8BE2\u7F13\u5B58"}]}),children:L(k,{children:[u(I.Item,{noStyle:!0,name:"cachingEnable",valuePropName:"checked",children:u(ne,{disabled:S,checkedChildren:t.formatMessage({id:"ZUPzqr",defaultMessage:[{type:0,value:"\u5F00\u542F"}]}),unCheckedChildren:t.formatMessage({id:"47GdDb",defaultMessage:[{type:0,value:"\u5173\u95ED"}]})})}),u("span",{className:D.tip,style:{marginLeft:12},children:u(R,{id:"oDLN4x",defaultMessage:[{type:0,value:"\u5BF9\u67E5\u8BE2\u8FDB\u884C\u7F13\u5B58"}]})})]})}),u(I.Item,{label:t.formatMessage({id:"1pv3Jk",defaultMessage:[{type:0,value:"\u6700\u5927\u65F6\u957F"}]}),name:"cachingMaxAge",children:u(Ne,{disabled:S,addonAfter:t.formatMessage({id:"XEPmlP",defaultMessage:[{type:0,value:"\u79D2"}]})})}),u(I.Item,{label:t.formatMessage({id:"L/CHdQ",defaultMessage:[{type:0,value:"\u91CD\u65B0\u6821\u9A8C\u65F6\u957F"}]}),name:"cachingStaleWhileRevalidate",children:u(Ne,{disabled:S,addonAfter:t.formatMessage({id:"XEPmlP",defaultMessage:[{type:0,value:"\u79D2"}]})})})]}):null,e.operationType===V.QUERY||e.type==="global"?L(k,{children:[e.type==="panel"?u("div",{className:D.splitLine}):"",u("div",{className:D.tip,children:u(R,{id:"szOpH5",defaultMessage:[{type:0,value:"\u5B9E\u65F6\u914D\u7F6E"}]})}),u(I.Item,{label:t.formatMessage({id:"2DHz6I",defaultMessage:[{type:0,value:"\u5B9E\u65F6\u67E5\u8BE2"}]}),children:L(k,{children:[u(I.Item,{noStyle:!0,name:"liveQueryEnable",valuePropName:"checked",children:u(ne,{disabled:S,checkedChildren:t.formatMessage({id:"ZUPzqr",defaultMessage:[{type:0,value:"\u5F00\u542F"}]}),unCheckedChildren:t.formatMessage({id:"47GdDb",defaultMessage:[{type:0,value:"\u5173\u95ED"}]})})}),u("span",{className:D.tip,style:{marginLeft:12},children:u(R,{id:"ZMK5E4",defaultMessage:[{type:0,value:"\u670D\u52A1\u7AEF\u5B9E\u65F6\u67E5\u8BE2"}]})})]})}),u(I.Item,{label:t.formatMessage({id:"Aj9NiL",defaultMessage:[{type:0,value:"\u8F6E\u8BE2\u95F4\u9694"}]}),name:"liveQueryPollingIntervalSeconds",children:u(Ne,{disabled:S,addonAfter:t.formatMessage({id:"XEPmlP",defaultMessage:[{type:0,value:"\u79D2"}]})})})]}):null]}),e.type==="global"?L(I.Item,{wrapperCol:{offset:8,span:16},children:[u(Oe,{className:"btn-save",onClick:()=>{a.submit()},children:u(R,{id:"b5l2vN",defaultMessage:[{type:0,value:"\u4FDD\u5B58"}]})}),u(Oe,{className:"btn-cancel ml-4",onClick:e.onClose,children:u(R,{id:"2QzYmY",defaultMessage:[{type:0,value:"\u53D6\u6D88"}]})})]}):null]})})}export{ue as $,oe as A,Ln as B,Mn as C,Dn as D,Je as E,He as F,In as G,Tn as H,rs as I,re as J,is as K,De as L,ve as M,x as N,Yn as O,rt as P,H as Q,ot as R,Kn as S,es as T,sn as U,rn as V,on as W,_n as X,gn as Y,ht as Z,qe as _,ce as a,wn as a0,Nn as a1,ee as a2,We as b,en as c,M as d,Q as e,ss as f,bn as g,ze as h,O as i,Zn as j,Wn as k,ns as l,q as m,z as n,Y as o,Ye as p,Xn as q,h as r,F as s,zn as t,Jn as u,fn as v,Hn as w,ts as x,xn as y,tn as z};
