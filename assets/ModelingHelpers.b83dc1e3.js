import{h as r,c as A,m as p}from"./index.e5e6c754.js";import{p as d,g as C}from"./fireboom-prisma-ast.esm.6ae74454.js";const B="/api/v1",T="/dataSource",S="/prisma/migrate/:id",I="/prisma/dmf/:id",k="/model/graphql/",H="Untitled",b="^[A-Za-z][A-Za-z0-9_]*$",G="/workbench/data-source/new",u="fb_delete",h={id:0,name:u,type:"model",properties:[{type:"field",name:"id",fieldType:"Int",attributes:[{type:"attribute",kind:"field",name:"id"}]}]},v=()=>r(`${T}?datasourceType=1`),Y=(e,t)=>{e.find(o=>["enum","model"].includes(o.type))||e.push(h);const s=S.replace(":id",String(t)),c=d({type:"schema",list:e});return A.post(s,{schema:c},{timeout:3e4})},_=e=>r(I.replace(":id",e),void 0,{timeout:15e3}).then(t=>{var s,c;return t.models=(s=t.models)!=null?s:[],t.enums=(c=t.enums)!=null?c:[],t}),P="fetch_blocks",D="refetch_blocks",f="local_blocks",y="update_blocks",R="update_current_entity_id",N="update_preview_filters",w="save_gql_schema",L="create_apollo_client",E=(e,t,s)=>({type:P,payload:{blocks:e,originBlocks:e,dbSource:t,schema:s}}),M=(e,t)=>({type:D,payload:{blocks:e,originBlocks:e,schema:t}}),m=e=>({type:f,payload:{blocks:e}}),V=e=>({type:y,payload:e}),W=e=>({type:R,payload:e}),q=e=>({type:N,payload:e}),g=e=>({type:L,payload:e}),i=e=>(C(e).list||[]).filter(t=>!(t.type==="model"&&t.name===u)).map((t,s)=>({...t,id:s+1})),O=(e,t,s,c)=>{const o=c.current;return _(e).then(({enums:a,models:n,schemaContent:l})=>{if(o!==c.current){console.info("\u6570\u636E\u5E93id\u5DF2\u6539\u53D8\uFF0C\u4E0D\u518D\u6267\u884C\u540E\u7EED\u64CD\u4F5C");return}t(E(i(l),s,{models:n,enums:a}))})},Q=(e,t)=>_(e).then(({enums:s,models:c,schemaContent:o})=>{t(M(i(o),{models:c,enums:s}))}),$=(e,t)=>{t(m(i(e)))},x=(e,t)=>{t(m(e))},z=(e,t,s,c)=>{const o=c.current,a=s.find(n=>n.id===e);return a?O(String(e),t,a,c).then(()=>{if(o!==c.current){console.info("\u6570\u636E\u5E93id\u5DF2\u6539\u53D8\uFF0C\u4E0D\u518D\u6267\u884C\u540E\u7EED\u64CD\u4F5C");return}console.log("blocks",a),t(g(e))}).catch(n=>{p.error(`Fetch prisma dmf & schema error: ${n.message}`),t(E([],a,{models:[],enums:[]}))}):Promise.resolve()};export{B,L as C,T as D,b as E,P as I,f as L,u as M,k as P,D as R,w as S,H as U,V as a,$ as b,x as c,W as d,N as e,v as f,R as g,y as h,z as i,G as j,i as k,Y as m,Q as r,q as u};
