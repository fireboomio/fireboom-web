import{g as A,f as h,a as d}from"./fireBoomAPIOperator-eaf8363a.js";import{c as S,i as u,r as g,l as P}from"./PrismaSchemaActions-5cb76651.js";import{M as n}from"./fireBoomConstants-acaaa4c8.js";import{V as y}from"./index-e23f2223.js";const i=s=>(A(s).list||[]).filter(e=>!(e.type==="model"&&e.name===n)).map((e,t)=>({...e,id:t+1})),E=async(s,e,t,c)=>{var l,m;if(c.current!==c.current){console.info("数据库name已改变，不再执行后续操作");return}const[o,r]=await Promise.all([h(s),d(s).catch(()=>"")]),f=(((l=o==null?void 0:o.datamodel)==null?void 0:l.models)??[]).filter(p=>p.name!==n);e(u(i(r),t,{models:f,enums:((m=o==null?void 0:o.datamodel)==null?void 0:m.enums)??[]}))},T=async(s,e)=>{var a,o;const[t,c]=await Promise.all([h(s),d(s).catch(()=>"")]);g(i(c),{models:(((a=t==null?void 0:t.datamodel)==null?void 0:a.models)??[]).filter(r=>r.name!==n),enums:((o=t==null?void 0:t.datamodel)==null?void 0:o.enums)??[]})},k=(s,e)=>{e(P(i(s)))},C=(s,e)=>{e(P(s))},_=(s,e,t,c)=>{const a=c.current,o=t.find(r=>r.name===s);return o?E(s,e,o,c).then(()=>{if(a!==c.current){console.info("数据库id已改变，不再执行后续操作");return}console.log("blocks",o),e(S(s))}).catch(r=>{y.error(`Fetch prisma dmf & schema error: ${r.message}`),e(u([],o,{models:[],enums:[]}))}):Promise.resolve()};export{k as a,C as b,i as c,_ as f,T as r};
