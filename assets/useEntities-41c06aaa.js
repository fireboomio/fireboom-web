import{l as B,V as x,K as R,r as y}from"./index-91e91fd5.js";import{b as S}from"./PrismaSchemaActions-5cb76651.js";import{m as w}from"./fireBoomAPIOperator-1f97b108.js";import{P as h}from"./PrismaSchemaContext-b67cfb1c.js";import{r as g,a as D,b as P}from"./ModelingHelpers-9bbf4bb6.js";const c={extractDefaultAttrArgs:t=>{const{value:r}=t[0]??{value:void 0};return typeof r=="object"&&r.name||r},extractNormalAttrArgs:t=>{const{value:r}=t[0]??{value:void 0};return r},extractIndexAttributeArgs:t=>{const r=(t==null?void 0:t.map(e=>e.value))??[],i=r.filter(e=>e.key==="fields").map(e=>e.value).flatMap(e=>e.args),u=r.length>=1?r[0].args:[],n=t==null?void 0:t.map(e=>e.value).filter(e=>e.key==="name").map(e=>e.value)[0],l=t==null?void 0:t.map(e=>e.value).filter(e=>e.key==="map").map(e=>e.value)[0];return{fields:i.length>0?i:u,name:n,map:l}},extractRelationAttributeArgs:t=>{var l,e,a;const r=t.map(s=>s.value).filter(s=>s.key==="name").map(s=>s.value)[0],i=(e=(l=t[0])==null?void 0:l.value)!=null&&e.key||(a=t[0])==null?void 0:a.value,u=t.map(s=>s.value).filter(s=>s.key==="fields").map(s=>s.value).flatMap(s=>s.args),n=t.map(s=>s.value).filter(s=>s.key==="references").map(s=>s.value).flatMap(s=>s.args);return{name:r||i,fields:u,references:n}},buildNewRelationArgs:(t,r,i)=>{const u=[];return t&&u.push({type:"attributeArgument",value:{type:"keyValue",key:"name",value:t}}),r&&r.length>0&&u.push({type:"attributeArgument",value:{type:"keyValue",key:"fields",value:{type:"array",args:r}}}),i&&i.length>0&&u.push({type:"attributeArgument",value:{type:"keyValue",key:"references",value:{type:"array",args:i}}}),u}},F=(t,r)=>{var l,e;const i=(l=t.attributes)==null?void 0:l.find(a=>a.name==="relation"),u=((e=i==null?void 0:i.args)==null?void 0:e.map(a=>a.value).filter(a=>a.key==="fields").map(a=>a.value).flatMap(a=>a.args))??[];return!!r.properties.filter(a=>a.type==="field").map(a=>a).filter(a=>u.includes(a.name)).find(a=>{var s;return(s=a.attributes)==null?void 0:s.find(p=>p.name==="unique")})},k=(t,r)=>{const i=[...r];return t.properties=t.properties??[],t.properties.filter(n=>n.type==="field").map(n=>n).filter(n=>{var l;return(l=n.attributes)==null?void 0:l.find(e=>e.name==="relation")}).forEach(n=>{var s,p;const l=n.fieldType,{name:e}=c.extractRelationAttributeArgs(((p=(s=n.attributes)==null?void 0:s.find(o=>o.name==="relation"))==null?void 0:p.args)??[]),a=i.filter(o=>o.type==="model").map(o=>o).find(o=>o.name===l);if(a){const o=F(n,t);let f=!1;const v=a.properties.map(m=>{var d,A;if(m.type==="field"&&m.fieldType===t.name){if(e){const{name:E}=c.extractRelationAttributeArgs(((A=(d=m.attributes)==null?void 0:d.find(N=>N.name==="relation"))==null?void 0:A.args)??[]);if(E!==e)return m}return f=!0,{...m,array:!o,optional:o}}return m});if(!f){const m={type:"attribute",kind:"field",name:"relation",args:c.buildNewRelationArgs(e,[],[])};v.push({type:"field",name:e?e.replaceAll('"',"").toLowerCase():`${t.name.toLowerCase()}${o?"":"s"}`,fieldType:t.name,array:!o,optional:o,attributes:e?[m]:[]})}i.forEach((m,d)=>{m.id===a.id&&(i[d]={...a,properties:v})})}}),i},T=(t,r,i)=>{const u=t.map(l=>l.fieldType),n=t.map(l=>{var e,a;return c.extractRelationAttributeArgs(((a=(e=l.attributes)==null?void 0:e.find(s=>s.name==="relation"))==null?void 0:a.args)??[])}).map(l=>l.name);return i.map(l=>{if(l.type==="model"&&u.includes(l.name)){const e={...l};return{...e,properties:e.properties.filter(a=>{var s,p;if(a.type==="field"&&a.fieldType===r){const{name:o}=c.extractRelationAttributeArgs(((p=(s=a.attributes)==null?void 0:s.find(f=>f.name==="relation"))==null?void 0:p.args)??[]);return!n.includes(o)}return!0})}}return l})},L=t=>({addModel:r=>{const i=[...t,r];return k(r,i)},updateModel:r=>{const i=t.find(e=>e.id===r.id);if(!i)return t;const u=i==null?void 0:i.properties.filter(e=>{var a;return e.type==="field"&&((a=e.attributes)==null?void 0:a.find(s=>s.name==="relation"))}).map(e=>e),n=r.properties.filter(e=>{var a;return e.type==="field"&&((a=e.attributes)==null?void 0:a.find(s=>s.name==="relation"))}).map(e=>e),l=u.filter(e=>!n.find(a=>{var s,p;return JSON.stringify((s=a.attributes)==null?void 0:s.find(o=>o.name==="relation"))===JSON.stringify((p=e.attributes)==null?void 0:p.find(o=>o.name==="relation"))}));return k(r,T(l,r.name,t).map(e=>e.id===r.id?r:e))},addEnum:r=>[...t,r],addEnums:r=>[...t,...r],updateEnum:r=>t.map(i=>i.id===r.id?r:i),deleteEntity:r=>{const i=t.find(n=>n.id===r);if(!i)return t;const u=i.name;return t.filter(n=>n.id!==r).map(n=>n.type==="model"?{...n,properties:n.properties.filter(l=>!(l.type==="field"&&l.fieldType===u))}:n)},cleanEmptyNameEntity:()=>t.filter(r=>!(["enum","model"].includes(r.type)&&!r.name)),updateEntityName:(r,i)=>{const u=t.find(n=>n.id===r).name;return t.map(n=>{if(n.id!==r&&n.type==="model"){const l={...n},e=[...l.properties];return{...l,properties:e.map(a=>a.type==="field"&&a.fieldType===u?{...a,fieldType:i}:a)}}return n.id===r&&["enum","model"].includes(n.type)?{...n,name:i}:n})}});B.throttle(()=>{x.error("当前schema不合法",3)},3e3);const U=()=>{const t=R(),{state:{blocks:r,currentDBSource:i,originBlocks:u},dispatch:n}=y.useContext(h);return{blocks:r,originBlocks:u,updateAndSaveBlock:p=>(p.forEach(o=>{o.type==="model"&&!o.properties&&(o.properties=[])}),w(p,i.name).then(()=>g(i.name)).catch(o=>{throw n(S(L(r).cleanEmptyNameEntity())),x.error(t.formatMessage({id:"waeVf8",defaultMessage:[{type:0,value:"数据迁移失败！error: "},{type:1,value:"error"}]},{error:o.message})),o})),applyLocalSchema:p=>{try{D(p,n)}catch{}},applyLocalBlocks:p=>{P(p,n)},refreshBlocks:()=>g(i.name)}},W=()=>{const{state:{currentDBSource:t}}=y.useContext(h);return t},K=()=>{const{state:{blocks:t,delMap:r,editMap:i,newMap:u}}=y.useContext(h),n=()=>Math.max(...t.map(l=>l.id))+1;return{entities:t.filter(l=>["enum","model"].includes(l.type)).map(l=>l),delMap:r,editMap:i,newMap:u,getNextId:n,getFirstEntity:()=>t.find(l=>["enum","model"].includes(l.type))}};export{c as A,L as P,W as a,U as b,K as u};
