import{l as B,V as x,K as R,r as y}from"./index-2eb05974.js";import{b as S}from"./PrismaSchemaActions-5cb76651.js";import{m as b}from"./fireBoomAPIOperator-3360095f.js";import{P as h}from"./PrismaSchemaContext-506c4fc2.js";import{r as g,a as w,b as D}from"./ModelingHelpers-465703a6.js";const c={extractDefaultAttrArgs:t=>{const{value:r}=t[0]??{value:void 0};return typeof r=="object"&&r.name||r},extractNormalAttrArgs:t=>{const{value:r}=t[0]??{value:void 0};return r},extractIndexAttributeArgs:t=>{const r=(t==null?void 0:t.map(e=>e.value))??[],o=r.filter(e=>e.key==="fields").map(e=>e.value).flatMap(e=>e.args),u=r.length>=1?r[0].args:[],i=t==null?void 0:t.map(e=>e.value).filter(e=>e.key==="name").map(e=>e.value)[0],s=t==null?void 0:t.map(e=>e.value).filter(e=>e.key==="map").map(e=>e.value)[0];return{fields:o.length>0?o:u,name:i,map:s}},extractRelationAttributeArgs:t=>{var s,e,a;const r=t.map(n=>n.value).filter(n=>n.key==="name").map(n=>n.value)[0],o=(e=(s=t[0])==null?void 0:s.value)!=null&&e.key||(a=t[0])==null?void 0:a.value,u=t.map(n=>n.value).filter(n=>n.key==="fields").map(n=>n.value).flatMap(n=>n.args),i=t.map(n=>n.value).filter(n=>n.key==="references").map(n=>n.value).flatMap(n=>n.args);return{name:r||o,fields:u,references:i}},buildNewRelationArgs:(t,r,o)=>{const u=[];return t&&u.push({type:"attributeArgument",value:{type:"keyValue",key:"name",value:t}}),r&&r.length>0&&u.push({type:"attributeArgument",value:{type:"keyValue",key:"fields",value:{type:"array",args:r}}}),o&&o.length>0&&u.push({type:"attributeArgument",value:{type:"keyValue",key:"references",value:{type:"array",args:o}}}),u}},P=(t,r)=>{var s,e;const o=(s=t.attributes)==null?void 0:s.find(a=>a.name==="relation"),u=((e=o==null?void 0:o.args)==null?void 0:e.map(a=>a.value).filter(a=>a.key==="fields").map(a=>a.value).flatMap(a=>a.args))??[];return!!r.properties.filter(a=>a.type==="field").map(a=>a).filter(a=>u.includes(a.name)).find(a=>{var n;return(n=a.attributes)==null?void 0:n.find(m=>m.name==="unique")})},k=(t,r)=>{const o=[...r];return t.properties=t.properties??[],t.properties.filter(i=>i.type==="field").map(i=>i).filter(i=>{var s;return(s=i.attributes)==null?void 0:s.find(e=>e.name==="relation")}).forEach(i=>{var n,m;const s=i.fieldType,{name:e}=c.extractRelationAttributeArgs(((m=(n=i.attributes)==null?void 0:n.find(l=>l.name==="relation"))==null?void 0:m.args)??[]),a=o.filter(l=>l.type==="model").map(l=>l).find(l=>l.name===s);if(a){const l=P(i,t);let f=!1;const v=a.properties.map(p=>{var d,A;if(p.type==="field"&&p.fieldType===t.name){if(e){const{name:E}=c.extractRelationAttributeArgs(((A=(d=p.attributes)==null?void 0:d.find(N=>N.name==="relation"))==null?void 0:A.args)??[]);if(E!==e)return p}return f=!0,{...p,array:!l,optional:l}}return p});if(!f){const p={type:"attribute",kind:"field",name:"relation",args:c.buildNewRelationArgs(e,[],[])};v.push({type:"field",name:e?e.replaceAll('"',"").toLowerCase():`${t.name.toLowerCase()}${l?"":"s"}`,fieldType:t.name,array:!l,optional:l,attributes:e?[p]:[]})}o.forEach((p,d)=>{p.id===a.id&&(o[d]={...a,properties:v})})}}),o},F=(t,r,o)=>{const u=t.map(s=>s.fieldType),i=t.map(s=>{var e,a;return c.extractRelationAttributeArgs(((a=(e=s.attributes)==null?void 0:e.find(n=>n.name==="relation"))==null?void 0:a.args)??[])}).map(s=>s.name);return o.map(s=>{if(s.type==="model"&&u.includes(s.name)){const e={...s};return{...e,properties:e.properties.filter(a=>{var n,m;if(a.type==="field"&&a.fieldType===r){const{name:l}=c.extractRelationAttributeArgs(((m=(n=a.attributes)==null?void 0:n.find(f=>f.name==="relation"))==null?void 0:m.args)??[]);return!i.includes(l)}return!0})}}return s})},T=t=>({addModel:r=>{const o=[...t,r];return k(r,o)},updateModel:r=>{const o=t.find(e=>e.id===r.id);if(!o)return t;const u=o==null?void 0:o.properties.filter(e=>{var a;return e.type==="field"&&((a=e.attributes)==null?void 0:a.find(n=>n.name==="relation"))}).map(e=>e),i=r.properties.filter(e=>{var a;return e.type==="field"&&((a=e.attributes)==null?void 0:a.find(n=>n.name==="relation"))}).map(e=>e),s=u.filter(e=>!i.find(a=>{var n,m;return JSON.stringify((n=a.attributes)==null?void 0:n.find(l=>l.name==="relation"))===JSON.stringify((m=e.attributes)==null?void 0:m.find(l=>l.name==="relation"))}));return k(r,F(s,r.name,t).map(e=>e.id===r.id?r:e))},addEnum:r=>[...t,r],addEnums:r=>[...t,...r],updateEnum:r=>t.map(o=>o.id===r.id?r:o),deleteEntity:r=>{const o=t.find(i=>i.id===r);if(!o)return t;const u=o.name;return t.filter(i=>i.id!==r).map(i=>i.type==="model"?{...i,properties:i.properties.filter(s=>!(s.type==="field"&&s.fieldType===u))}:i)},cleanEmptyNameEntity:()=>t.filter(r=>!(["enum","model"].includes(r.type)&&!r.name)),updateEntityName:(r,o)=>{const u=t.find(i=>i.id===r).name;return t.map(i=>{if(i.id!==r&&i.type==="model"){const s={...i},e=[...s.properties];return{...s,properties:e.map(a=>a.type==="field"&&a.fieldType===u?{...a,fieldType:o}:a)}}return i.id===r&&["enum","model"].includes(i.type)?{...i,name:o}:i})}});B.throttle(()=>{x.error("当前schema不合法",3)},3e3);const U=()=>{const t=R(),{state:{blocks:r,currentDBSource:o,originBlocks:u},dispatch:i}=y.useContext(h);return{blocks:r,originBlocks:u,updateAndSaveBlock:m=>(m.forEach(l=>{l.type==="model"&&!l.properties&&(l.properties=[])}),b(m,o.name).then(()=>g(o.name)).catch(l=>{throw i(S(T(r).cleanEmptyNameEntity())),x.error(t.formatMessage({id:"waeVf8",defaultMessage:[{type:0,value:"数据迁移失败！error: "},{type:1,value:"error"}]},{error:l.message})),l})),applyLocalSchema:m=>{try{w(m,i)}catch{}},applyLocalBlocks:m=>{D(m,i)},refreshBlocks:()=>g(o.name)}},W=()=>{const{state:{currentDBSource:t}}=y.useContext(h);return t},K=()=>{const{state:{blocks:t,delMap:r,editMap:o,newMap:u}}=y.useContext(h),i=()=>Math.max(...t.map(n=>n.id))+1;let s=[],e,a;for(const n of t)switch(n.type){case"enum":case"model":e=n;break;case"comment":a=n.text.replace(/^\/{3}\s*/,"");break;case"break":e&&s.push({...e,comment:a}),e=void 0,a=void 0;break}return{entities:s,delMap:r,editMap:o,newMap:u,getNextId:i,getFirstEntity:()=>t.find(n=>["enum","model"].includes(n.type))}};export{c as A,T as P,W as a,U as b,K as u};
