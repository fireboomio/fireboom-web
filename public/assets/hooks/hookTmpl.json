{
  "global": {
    "onRequest": "import type { WunderGraphRequestContext, WunderGraphRequest } from '@wundergraph/sdk'\nimport type { User } from 'generated/wundergraph.server'\nimport type { SKIP, CANCEL } from 'generated/wundergraph.hooks'\n\nexport default async function onRequest(ctx: WunderGraphRequestContext<User>, request: WunderGraphRequest) : Promise<WunderGraphRequest | SKIP | CANCEL | void>{\n\t// TODO: 在此处添加代码\n}",
    "onResponse": "import type { WunderGraphRequestContext, WunderGraphResponse } from '@wundergraph/sdk'\nimport type { User } from 'generated/wundergraph.server'\nimport type { SKIP, CANCEL } from 'generated/wundergraph.hooks'\n\nexport default async function onResponse(ctx: WunderGraphRequestContext<User>, response: WunderGraphResponse) : Promise<WunderGraphResponse | SKIP | CANCEL | void>{\n\t// TODO: 在此处添加代码\n}"
  },
  "auth": {
    "postAuthentication": "import type { User } from 'generated/wundergraph.server'\n\nexport default async function postAuthentication(user: User) : Promise<void>{\n\t// TODO: 在此处添加代码\n}",
    "mutatingPostAuthentication": "import type { User } from 'generated/wundergraph.server'\nimport type { AuthenticationResponse } from 'generated/wundergraph.hooks'\n\nexport default async function mutatingPostAuthentication(user: User) : Promise<AuthenticationResponse>{\n\t// TODO: 在此处添加代码\n\treturn {\n\t\tstatus:'deny',\n\t\tmessage: 'string'\n\t}\n}",
    "revalidate": "import type { User } from 'generated/wundergraph.server'\nimport type { AuthenticationResponse } from 'generated/wundergraph.hooks'\n\nexport default async function revalidate(user: User) : Promise<AuthenticationResponse>{\n\t// TODO: 在此处添加代码\n\treturn {\n\t\tstatus:'deny',\n\t\tmessage: 'string'\n\t}\n}"
  },
  "hook": {
    "WithoutInput": {
      "mockResolve": "import type { Context } from '@wundergraph/sdk'\nimport type { User } from 'generated/wundergraph.server'\nimport type { InternalClient } from 'generated/wundergraph.internal.client'\nimport { $HOOK_NAME$Response } from 'generated/models'\n\nexport default async function mockResolve(ctx: Context<User, InternalClient>) : Promise<$HOOK_NAME$Response>{\n\t// TODO: 在此处添加代码\n}",
      "preResolve": "import type { Context } from '@wundergraph/sdk'\nimport type { User } from 'generated/wundergraph.server'\nimport type { InternalClient } from 'generated/wundergraph.internal.client'\n\nexport default async function preResolve(ctx: Context<User, InternalClient>) : Promise<void>{\n\t// TODO: 在此处添加代码\n}",
      "postResolve": "import type { Context } from '@wundergraph/sdk'\nimport type { User } from 'generated/wundergraph.server'\nimport type { InternalClient } from 'generated/wundergraph.internal.client'\nimport { $HOOK_NAME$Response } from 'generated/models'\n\nexport default async function postResolve(ctx: Context<User, InternalClient>, response: $HOOK_NAME$Response) : Promise<void>{\n\t// TODO: 在此处添加代码\n}",
      "customResolve": "import type { Context } from '@wundergraph/sdk'\nimport type { User } from 'generated/wundergraph.server'\nimport type { InternalClient } from 'generated/wundergraph.internal.client'\nimport { $HOOK_NAME$Response } from 'generated/models'\n\nexport default async function customResolve(ctx: Context<User, InternalClient>) : Promise<void | $HOOK_NAME$Response>{\n\t// TODO: 在此处添加代码\n}",
      "mutatingPostResolve": "import type { Context } from '@wundergraph/sdk'\nimport type { User } from 'generated/wundergraph.server'\nimport type { InternalClient } from 'generated/wundergraph.internal.client'\nimport { $HOOK_NAME$Response } from 'generated/models'\n\nexport default async function mutatingPostResolve(ctx: Context<User, InternalClient>, response: $HOOK_NAME$Response) : Promise<$HOOK_NAME$Response>{\n\t// TODO: 在此处添加代码\n\treturn response\n}"
    },
    "WithInput": {
      "mockResolve": "import type { Context } from '@wundergraph/sdk'\nimport type { User } from 'generated/wundergraph.server'\nimport type { InternalClient } from 'generated/wundergraph.internal.client'\nimport { Injected$HOOK_NAME$Input, $HOOK_NAME$Response } from 'generated/models'\n\nexport default async function mockResolve(ctx: Context<User, InternalClient>, input: Injected$HOOK_NAME$Input) : Promise<$HOOK_NAME$Response>{\n\t// TODO: 在此处添加代码\n}",
      "preResolve": "import type { Context } from '@wundergraph/sdk'\nimport type { User } from 'generated/wundergraph.server'\nimport type { InternalClient } from 'generated/wundergraph.internal.client'\nimport { Injected$HOOK_NAME$Input } from 'generated/models'\n\nexport default async function preResolve(ctx: Context<User, InternalClient>, input: Injected$HOOK_NAME$Input) : Promise<void>{\n\t// TODO: 在此处添加代码\n}",
      "mutatingPreResolve": "import type { Context } from '@wundergraph/sdk'\nimport type { User } from 'generated/wundergraph.server'\nimport type { InternalClient } from 'generated/wundergraph.internal.client'\nimport { Injected$HOOK_NAME$Input } from 'generated/models'\n\nexport default async function mutatingPreResolve(ctx: Context<User, InternalClient>, input: Injected$HOOK_NAME$Input) : Promise<Injected$HOOK_NAME$Input>{\n\t// TODO: 在此处添加代码\n\treturn input\n}",
      "postResolve": "import type { Context } from '@wundergraph/sdk'\nimport type { User } from 'generated/wundergraph.server'\nimport type { InternalClient } from 'generated/wundergraph.internal.client'\nimport { Injected$HOOK_NAME$Input, $HOOK_NAME$Response } from 'generated/models'\n\nexport default async function postResolve(ctx: Context<User, InternalClient>, input: Injected$HOOK_NAME$Input, response: $HOOK_NAME$Response) : Promise<void>{\n\t// TODO: 在此处添加代码\n}",
      "customResolve": "import type { Context } from '@wundergraph/sdk'\nimport type { User } from 'generated/wundergraph.server'\nimport type { InternalClient } from 'generated/wundergraph.internal.client'\nimport { Injected$HOOK_NAME$Input, $HOOK_NAME$Response } from 'generated/models'\n\nexport default async function customResolve(ctx: Context<User, InternalClient>, input: Injected$HOOK_NAME$Input) : Promise<void | $HOOK_NAME$Response>{\n\t// TODO: 在此处添加代码\n}",
      "mutatingPostResolve": "import type { Context } from '@wundergraph/sdk'\nimport type { User } from 'generated/wundergraph.server'\nimport type { InternalClient } from 'generated/wundergraph.internal.client'\nimport { Injected$HOOK_NAME$Input, $HOOK_NAME$Response } from 'generated/models'\n\nexport default async function mutatingPostResolve(ctx: Context<User, InternalClient>, input: Injected$HOOK_NAME$Input, response: $HOOK_NAME$Response) : Promise<$HOOK_NAME$Response>{\n\t// TODO: 在此处添加代码\n\treturn response\n}"
    }
  }
}